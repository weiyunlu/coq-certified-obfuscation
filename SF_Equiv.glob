DIGEST e79de2708d99d5e09a4bfe1f175ab5a4
FSF_Equiv
R98:110 Coq.Bool.Bool <> <> lib
R128:142 Coq.Arith.Arith <> <> lib
R160:174 Coq.Arith.EqNat <> <> lib
R192:206 Coq.omega.Omega <> <> lib
R224:237 Coq.Lists.List <> <> lib
R255:288 Coq.Logic.FunctionalExtensionality <> <> lib
R328:334 SF_Maps <> <> lib
R352:357 SF_Imp <> <> lib
def 2580:2585 <> aequiv
R2596:2599 SF_Imp <> aexp ind
R2625:2629 SF_Imp <> state def
R2648:2650 Coq.Init.Logic <> :type_scope:x_'='_x not
R2637:2641 SF_Imp <> aeval def
R2646:2647 SF_Equiv <> a1 var
R2643:2644 SF_Equiv <> st var
R2651:2655 SF_Imp <> aeval def
R2660:2661 SF_Equiv <> a2 var
R2657:2658 SF_Equiv <> st var
def 2676:2681 <> bequiv
R2692:2695 SF_Imp <> bexp ind
R2721:2725 SF_Imp <> state def
R2744:2746 Coq.Init.Logic <> :type_scope:x_'='_x not
R2733:2737 SF_Imp <> beval def
R2742:2743 SF_Equiv <> b1 var
R2739:2740 SF_Equiv <> st var
R2747:2751 SF_Imp <> beval def
R2756:2757 SF_Equiv <> b2 var
R2753:2754 SF_Equiv <> st var
prf 2866:2879 <> aequiv_example
R2884:2889 SF_Equiv <> aequiv def
R2893:2895 SF_Imp <> :aexp_scope:x_'-'_x not
R2892:2892 SF_Imp <> X def
R2896:2896 SF_Imp <> X def
prf 2950:2963 <> bequiv_example
R2968:2973 SF_Equiv <> bequiv def
R2987:2990 Coq.Init.Datatypes <> true constr
R2981:2983 SF_Imp <> :bexp_scope:x_'='_x not
R2977:2979 SF_Imp <> :aexp_scope:x_'-'_x not
R2976:2976 SF_Imp <> X def
R2980:2980 SF_Imp <> X def
R3020:3024 SF_Imp <> beval def
R3037:3050 SF_Equiv <> aequiv_example thm
R3037:3050 SF_Equiv <> aequiv_example thm
R3037:3050 SF_Equiv <> aequiv_example thm
def 3748:3753 <> cequiv
R3764:3766 SF_Imp <> com ind
R3798:3802 SF_Imp <> state def
R3810:3810 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3825:3831 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3846:3846 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R3813:3815 SF_Imp <> ::x_'/'_x_'\\'_x not
R3818:3821 SF_Imp <> ::x_'/'_x_'\\'_x not
R3811:3812 SF_Equiv <> c1 var
R3816:3817 SF_Equiv <> st var
R3822:3824 SF_Equiv <> st' var
R3834:3836 SF_Imp <> ::x_'/'_x_'\\'_x not
R3839:3842 SF_Imp <> ::x_'/'_x_'\\'_x not
R3832:3833 SF_Equiv <> c2 var
R3837:3838 SF_Equiv <> st var
R3843:3845 SF_Equiv <> st' var
prf 4087:4095 <> skip_left
R4110:4115 SF_Equiv <> cequiv def
R4138:4138 SF_Equiv <> c var
R4127:4129 SF_Imp <> :com_scope:x_';;'_x not
R4123:4126 SF_Imp <> :com_scope:'SKIP' not
R4130:4130 SF_Equiv <> c var
R4311:4315 SF_Imp <> E_Seq constr
R4311:4315 SF_Imp <> E_Seq constr
R4336:4341 SF_Imp <> E_Skip constr
R4336:4341 SF_Imp <> E_Skip constr
prf 4506:4515 <> skip_right
R4530:4535 SF_Equiv <> cequiv def
R4557:4557 SF_Equiv <> c var
R4543:4546 SF_Imp <> :com_scope:x_';;'_x not
R4542:4542 SF_Equiv <> c var
R4547:4550 SF_Imp <> :com_scope:'SKIP' not
prf 4703:4717 <> IFB_true_simple
R4736:4741 SF_Equiv <> cequiv def
R4782:4783 SF_Equiv <> c1 var
R4748:4751 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4757:4762 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4765:4770 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4773:4775 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R4752:4756 SF_Imp <> BTrue constr
R4763:4764 SF_Equiv <> c1 var
R4771:4772 SF_Equiv <> c2 var
R4914:4921 SF_Imp <> E_IfTrue constr
R4914:4921 SF_Imp <> E_IfTrue constr
prf 6823:6830 <> IFB_true
R6868:6877 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6878:6883 SF_Equiv <> cequiv def
R6926:6927 SF_Equiv <> c1 var
R6893:6896 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6898:6903 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6906:6911 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6914:6916 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R6897:6897 SF_Equiv <> b var
R6904:6905 SF_Equiv <> c1 var
R6912:6913 SF_Equiv <> c2 var
R6854:6859 SF_Equiv <> bequiv def
R6863:6867 SF_Imp <> BTrue constr
R6861:6861 SF_Equiv <> b var
R7126:7131 SF_Equiv <> bequiv def
R7220:7227 SF_Imp <> E_IfTrue constr
R7220:7227 SF_Imp <> E_IfTrue constr
R7257:7262 SF_Equiv <> bequiv def
prf 7384:7392 <> IFB_false
R7428:7434 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7435:7440 SF_Equiv <> cequiv def
R7477:7478 SF_Equiv <> c2 var
R7447:7450 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7452:7457 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7460:7465 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7468:7470 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7451:7451 SF_Equiv <> b var
R7458:7459 SF_Equiv <> c1 var
R7466:7467 SF_Equiv <> c2 var
R7413:7418 SF_Equiv <> bequiv def
R7422:7427 SF_Imp <> BFalse constr
R7420:7420 SF_Equiv <> b var
prf 7673:7688 <> swap_if_branches
R7709:7714 SF_Equiv <> cequiv def
R7752:7755 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7762:7767 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7770:7775 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7778:7780 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7756:7759 SF_Imp <> BNot constr
R7761:7761 SF_Equiv <> b var
R7768:7769 SF_Equiv <> e2 var
R7776:7777 SF_Equiv <> e1 var
R7721:7724 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7726:7731 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7734:7739 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7742:7744 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R7725:7725 SF_Equiv <> b var
R7732:7733 SF_Equiv <> e1 var
R7740:7741 SF_Equiv <> e2 var
prf 8162:8172 <> WHILE_false
R8205:8210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8211:8216 SF_Equiv <> cequiv def
R8245:8248 SF_Imp <> :com_scope:'SKIP' not
R8223:8228 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R8230:8233 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R8235:8238 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R8229:8229 SF_Equiv <> b var
R8234:8234 SF_Equiv <> c var
R8190:8195 SF_Equiv <> bequiv def
R8199:8204 SF_Imp <> BFalse constr
R8197:8197 SF_Equiv <> b var
R8366:8371 SF_Imp <> E_Skip constr
R8366:8371 SF_Imp <> E_Skip constr
R8483:8494 SF_Imp <> E_WhileFalse constr
R8483:8494 SF_Imp <> E_WhileFalse constr
prf 9834:9851 <> WHILE_true_nonterm
R9890:9895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9896:9898 Coq.Init.Logic <> :type_scope:'~'_x not
R9929:9930 Coq.Init.Logic <> :type_scope:'~'_x not
R9899:9899 SF_Imp <> ::x_'/'_x_'\\'_x not
R9916:9919 SF_Imp <> ::x_'/'_x_'\\'_x not
R9922:9925 SF_Imp <> ::x_'/'_x_'\\'_x not
R9900:9905 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R9907:9910 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R9912:9915 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R9906:9906 SF_Equiv <> b var
R9911:9911 SF_Equiv <> c var
R9920:9921 SF_Equiv <> st var
R9926:9928 SF_Equiv <> st' var
R9876:9881 SF_Equiv <> bequiv def
R9885:9889 SF_Imp <> BTrue constr
R9883:9883 SF_Equiv <> b var
R10012:10017 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10019:10022 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10024:10027 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10012:10017 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10019:10022 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10024:10027 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10303:10308 SF_Equiv <> bequiv def
prf 10838:10847 <> WHILE_true
R10877:10883 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10884:10889 SF_Equiv <> cequiv def
R10919:10924 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10929:10932 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10937:10940 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10925:10928 Coq.Init.Datatypes <> true constr
R10933:10936 SF_Imp <> :com_scope:'SKIP' not
R10896:10901 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10903:10906 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10908:10911 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R10902:10902 SF_Equiv <> b var
R10907:10907 SF_Equiv <> c var
R10864:10869 SF_Equiv <> bequiv def
R10873:10876 Coq.Init.Datatypes <> true constr
R10871:10871 SF_Equiv <> b var
prf 11210:11223 <> loop_unrolling
R11240:11245 SF_Equiv <> cequiv def
R11275:11278 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11280:11286 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11308:11314 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11319:11321 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R11279:11279 SF_Equiv <> b var
R11288:11291 SF_Imp <> :com_scope:x_';;'_x not
R11287:11287 SF_Equiv <> c var
R11292:11297 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11299:11302 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11304:11307 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11298:11298 SF_Equiv <> b var
R11303:11303 SF_Equiv <> c var
R11315:11318 SF_Imp <> :com_scope:'SKIP' not
R11252:11257 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11259:11262 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11264:11267 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R11258:11258 SF_Equiv <> b var
R11263:11263 SF_Equiv <> c var
R11478:11486 SF_Imp <> E_IfFalse constr
R11478:11486 SF_Imp <> E_IfFalse constr
R11507:11512 SF_Imp <> E_Skip constr
R11507:11512 SF_Imp <> E_Skip constr
R11549:11556 SF_Imp <> E_IfTrue constr
R11549:11556 SF_Imp <> E_IfTrue constr
R11583:11587 SF_Imp <> E_Seq constr
R11583:11587 SF_Imp <> E_Seq constr
R11733:11743 SF_Imp <> E_WhileTrue constr
R11733:11743 SF_Imp <> E_WhileTrue constr
R11869:11880 SF_Imp <> E_WhileFalse constr
R11869:11880 SF_Imp <> E_WhileFalse constr
prf 11963:11971 <> seq_assoc
R11994:11999 SF_Equiv <> cequiv def
R12019:12021 SF_Imp <> :com_scope:x_';;'_x not
R12028:12028 SF_Imp <> :com_scope:x_';;'_x not
R12017:12018 SF_Equiv <> c1 var
R12024:12025 SF_Imp <> :com_scope:x_';;'_x not
R12022:12023 SF_Equiv <> c2 var
R12026:12027 SF_Equiv <> c3 var
R12002:12002 SF_Imp <> :com_scope:x_';;'_x not
R12009:12011 SF_Imp <> :com_scope:x_';;'_x not
R12005:12006 SF_Imp <> :com_scope:x_';;'_x not
R12003:12004 SF_Equiv <> c1 var
R12007:12008 SF_Equiv <> c2 var
R12012:12013 SF_Equiv <> c3 var
prf 12227:12245 <> identity_assignment
R12259:12264 Coq.Strings.String <> string ind
R12270:12275 SF_Equiv <> cequiv def
R12295:12298 SF_Imp <> :com_scope:'SKIP' not
R12283:12287 SF_Imp <> :com_scope:x_'::='_x not
R12282:12282 SF_Equiv <> X var
R12288:12288 SF_Equiv <> X var
R12403:12407 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12409:12413 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12418:12419 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12403:12407 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12409:12413 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12418:12419 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12468:12492 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12468:12492 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12519:12531 SF_Maps <> t_update_same prfax
R12519:12531 SF_Maps <> t_update_same prfax
R12519:12531 SF_Maps <> t_update_same prfax
R12591:12595 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12597:12601 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12613:12614 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12602:12606 SF_Imp <> aeval def
R12591:12595 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12597:12601 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12613:12614 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R12602:12606 SF_Imp <> aeval def
R12653:12657 SF_Imp <> E_Ass constr
R12653:12657 SF_Imp <> E_Ass constr
R12688:12712 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12688:12712 Coq.Logic.FunctionalExtensionality <> functional_extensionality thm
R12739:12751 SF_Maps <> t_update_same prfax
R12739:12751 SF_Maps <> t_update_same prfax
R12739:12751 SF_Maps <> t_update_same prfax
prf 12841:12853 <> assign_aequiv
R12867:12872 Coq.Strings.String <> string ind
R12890:12895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12896:12901 SF_Equiv <> cequiv def
R12910:12914 SF_Imp <> :com_scope:x_'::='_x not
R12909:12909 SF_Equiv <> X var
R12915:12915 SF_Equiv <> e var
R12903:12906 SF_Imp <> :com_scope:'SKIP' not
R12880:12885 SF_Equiv <> aequiv def
R12889:12889 SF_Equiv <> e var
R12887:12887 SF_Equiv <> X var
def 13543:13548 <> prog_a
R13552:13554 SF_Imp <> com ind
R13561:13566 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13577:13584 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13596:13601 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13567:13569 SF_Imp <> :bexp_scope:'!'_x not
R13576:13576 SF_Imp <> :bexp_scope:'!'_x not
R13571:13574 SF_Imp <> :bexp_scope:x_'<='_x not
R13570:13570 SF_Imp <> X def
R13586:13590 SF_Imp <> :com_scope:x_'::='_x not
R13585:13585 SF_Imp <> X def
R13592:13594 SF_Imp <> :aexp_scope:x_'+'_x not
R13591:13591 SF_Imp <> X def
def 13616:13621 <> prog_b
R13625:13627 SF_Imp <> com ind
R13702:13706 SF_Imp <> :com_scope:x_';;'_x not
R13634:13637 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13643:13652 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13678:13689 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13697:13701 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R13639:13641 SF_Imp <> :bexp_scope:x_'='_x not
R13638:13638 SF_Imp <> X def
R13664:13670 SF_Imp <> :com_scope:x_';;'_x not
R13654:13658 SF_Imp <> :com_scope:x_'::='_x not
R13653:13653 SF_Imp <> X def
R13660:13662 SF_Imp <> :aexp_scope:x_'+'_x not
R13659:13659 SF_Imp <> X def
R13672:13676 SF_Imp <> :com_scope:x_'::='_x not
R13671:13671 SF_Imp <> Y def
R13691:13695 SF_Imp <> :com_scope:x_'::='_x not
R13690:13690 SF_Imp <> Y def
R13718:13722 SF_Imp <> :com_scope:x_';;'_x not
R13708:13712 SF_Imp <> :com_scope:x_'::='_x not
R13707:13707 SF_Imp <> X def
R13714:13716 SF_Imp <> :aexp_scope:x_'-'_x not
R13713:13713 SF_Imp <> X def
R13717:13717 SF_Imp <> Y def
R13724:13728 SF_Imp <> :com_scope:x_'::='_x not
R13723:13723 SF_Imp <> Y def
def 13744:13749 <> prog_c
R13753:13755 SF_Imp <> com ind
R13762:13765 SF_Imp <> :com_scope:'SKIP' not
def 13780:13785 <> prog_d
R13789:13791 SF_Imp <> com ind
R13798:13803 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13813:13820 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13838:13843 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13804:13806 SF_Imp <> :bexp_scope:'!'_x not
R13812:13812 SF_Imp <> :bexp_scope:'!'_x not
R13808:13810 SF_Imp <> :bexp_scope:x_'='_x not
R13807:13807 SF_Imp <> X def
R13822:13826 SF_Imp <> :com_scope:x_'::='_x not
R13821:13821 SF_Imp <> X def
R13827:13827 SF_Imp <> :aexp_scope:x_'+'_x not
R13833:13836 SF_Imp <> :aexp_scope:x_'+'_x not
R13829:13831 SF_Imp <> :aexp_scope:x_'*'_x not
R13828:13828 SF_Imp <> X def
R13832:13832 SF_Imp <> Y def
def 13858:13863 <> prog_e
R13867:13869 SF_Imp <> com ind
R13877:13881 SF_Imp <> :com_scope:x_'::='_x not
R13876:13876 SF_Imp <> Y def
def 13897:13902 <> prog_f
R13906:13908 SF_Imp <> com ind
R13926:13930 SF_Imp <> :com_scope:x_';;'_x not
R13916:13920 SF_Imp <> :com_scope:x_'::='_x not
R13915:13915 SF_Imp <> Y def
R13922:13924 SF_Imp <> :aexp_scope:x_'+'_x not
R13921:13921 SF_Imp <> X def
R13931:13936 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13946:13953 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13965:13970 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R13937:13939 SF_Imp <> :bexp_scope:'!'_x not
R13945:13945 SF_Imp <> :bexp_scope:'!'_x not
R13941:13943 SF_Imp <> :bexp_scope:x_'='_x not
R13940:13940 SF_Imp <> X def
R13944:13944 SF_Imp <> Y def
R13955:13959 SF_Imp <> :com_scope:x_'::='_x not
R13954:13954 SF_Imp <> Y def
R13961:13963 SF_Imp <> :aexp_scope:x_'+'_x not
R13960:13960 SF_Imp <> X def
def 13985:13990 <> prog_g
R13994:13996 SF_Imp <> com ind
R14003:14008 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14013:14020 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14025:14030 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14009:14012 Coq.Init.Datatypes <> true constr
R14021:14024 SF_Imp <> :com_scope:'SKIP' not
def 14045:14050 <> prog_h
R14054:14056 SF_Imp <> com ind
R14063:14068 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14078:14085 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14097:14102 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14069:14071 SF_Imp <> :bexp_scope:'!'_x not
R14077:14077 SF_Imp <> :bexp_scope:'!'_x not
R14073:14075 SF_Imp <> :bexp_scope:x_'='_x not
R14072:14072 SF_Imp <> X def
R14076:14076 SF_Imp <> X def
R14087:14091 SF_Imp <> :com_scope:x_'::='_x not
R14086:14086 SF_Imp <> X def
R14093:14095 SF_Imp <> :aexp_scope:x_'+'_x not
R14092:14092 SF_Imp <> X def
def 14117:14122 <> prog_i
R14126:14128 SF_Imp <> com ind
R14135:14140 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14150:14157 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14169:14174 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R14141:14143 SF_Imp <> :bexp_scope:'!'_x not
R14149:14149 SF_Imp <> :bexp_scope:'!'_x not
R14145:14147 SF_Imp <> :bexp_scope:x_'='_x not
R14144:14144 SF_Imp <> X def
R14148:14148 SF_Imp <> Y def
R14159:14163 SF_Imp <> :com_scope:x_'::='_x not
R14158:14158 SF_Imp <> X def
R14165:14167 SF_Imp <> :aexp_scope:x_'+'_x not
R14164:14164 SF_Imp <> Y def
def 14189:14201 <> equiv_classes
R14205:14208 Coq.Init.Datatypes <> list ind
R14211:14214 Coq.Init.Datatypes <> list ind
R14216:14218 SF_Imp <> com ind
prf 14829:14839 <> refl_aequiv
R14855:14858 SF_Imp <> aexp ind
R14862:14867 SF_Equiv <> aequiv def
R14871:14871 SF_Equiv <> a var
R14869:14869 SF_Equiv <> a var
prf 14922:14931 <> sym_aequiv
R14951:14954 SF_Imp <> aexp ind
R14972:14975 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14976:14981 SF_Equiv <> aequiv def
R14986:14987 SF_Equiv <> a1 var
R14983:14984 SF_Equiv <> a2 var
R14960:14965 SF_Equiv <> aequiv def
R14970:14971 SF_Equiv <> a2 var
R14967:14968 SF_Equiv <> a1 var
prf 15058:15069 <> trans_aequiv
R15092:15095 SF_Imp <> aexp ind
R15113:15116 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15129:15132 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15133:15138 SF_Equiv <> aequiv def
R15143:15144 SF_Equiv <> a3 var
R15140:15141 SF_Equiv <> a1 var
R15117:15122 SF_Equiv <> aequiv def
R15127:15128 SF_Equiv <> a3 var
R15124:15125 SF_Equiv <> a2 var
R15101:15106 SF_Equiv <> aequiv def
R15111:15112 SF_Equiv <> a2 var
R15108:15109 SF_Equiv <> a1 var
R15163:15168 SF_Equiv <> aequiv def
prf 15263:15273 <> refl_bequiv
R15289:15292 SF_Imp <> bexp ind
R15296:15301 SF_Equiv <> bequiv def
R15305:15305 SF_Equiv <> b var
R15303:15303 SF_Equiv <> b var
R15324:15329 SF_Equiv <> bequiv def
prf 15371:15380 <> sym_bequiv
R15400:15403 SF_Imp <> bexp ind
R15421:15424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15425:15430 SF_Equiv <> bequiv def
R15435:15436 SF_Equiv <> b1 var
R15432:15433 SF_Equiv <> b2 var
R15409:15414 SF_Equiv <> bequiv def
R15419:15420 SF_Equiv <> b2 var
R15416:15417 SF_Equiv <> b1 var
R15455:15460 SF_Equiv <> bequiv def
prf 15522:15533 <> trans_bequiv
R15556:15559 SF_Imp <> bexp ind
R15577:15580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15593:15596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15597:15602 SF_Equiv <> bequiv def
R15607:15608 SF_Equiv <> b3 var
R15604:15605 SF_Equiv <> b1 var
R15581:15586 SF_Equiv <> bequiv def
R15591:15592 SF_Equiv <> b3 var
R15588:15589 SF_Equiv <> b2 var
R15565:15570 SF_Equiv <> bequiv def
R15575:15576 SF_Equiv <> b2 var
R15572:15573 SF_Equiv <> b1 var
R15627:15632 SF_Equiv <> bequiv def
prf 15727:15737 <> refl_cequiv
R15753:15755 SF_Imp <> com ind
R15759:15764 SF_Equiv <> cequiv def
R15768:15768 SF_Equiv <> c var
R15766:15766 SF_Equiv <> c var
R15787:15792 SF_Equiv <> cequiv def
R15818:15825 Coq.Init.Logic <> iff_refl thm
R15818:15825 Coq.Init.Logic <> iff_refl thm
prf 15841:15850 <> sym_cequiv
R15870:15872 SF_Imp <> com ind
R15890:15893 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15894:15899 SF_Equiv <> cequiv def
R15904:15905 SF_Equiv <> c1 var
R15901:15902 SF_Equiv <> c2 var
R15878:15883 SF_Equiv <> cequiv def
R15888:15889 SF_Equiv <> c2 var
R15885:15886 SF_Equiv <> c1 var
R15924:15929 SF_Equiv <> cequiv def
R15979:15983 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15967:15969 SF_Imp <> ::x_'/'_x_'\\'_x not
R15972:15975 SF_Imp <> ::x_'/'_x_'\\'_x not
R15986:15988 SF_Imp <> ::x_'/'_x_'\\'_x not
R15991:15994 SF_Imp <> ::x_'/'_x_'\\'_x not
R15979:15983 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15967:15969 SF_Imp <> ::x_'/'_x_'\\'_x not
R15972:15975 SF_Imp <> ::x_'/'_x_'\\'_x not
R15986:15988 SF_Imp <> ::x_'/'_x_'\\'_x not
R15991:15994 SF_Imp <> ::x_'/'_x_'\\'_x not
R16055:16061 Coq.Init.Logic <> iff_sym thm
R16055:16061 Coq.Init.Logic <> iff_sym thm
prf 16088:16096 <> iff_trans
R16128:16128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16138:16142 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16143:16143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16153:16158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16168:16168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16161:16165 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16159:16160 SF_Equiv <> P1 var
R16166:16167 SF_Equiv <> P3 var
R16146:16150 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16144:16145 SF_Equiv <> P2 var
R16151:16152 SF_Equiv <> P3 var
R16131:16135 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16129:16130 SF_Equiv <> P1 var
R16136:16137 SF_Equiv <> P2 var
prf 16334:16345 <> trans_cequiv
R16368:16370 SF_Imp <> com ind
R16388:16391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16404:16407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16408:16413 SF_Equiv <> cequiv def
R16418:16419 SF_Equiv <> c3 var
R16415:16416 SF_Equiv <> c1 var
R16392:16397 SF_Equiv <> cequiv def
R16402:16403 SF_Equiv <> c3 var
R16399:16400 SF_Equiv <> c2 var
R16376:16381 SF_Equiv <> cequiv def
R16386:16387 SF_Equiv <> c2 var
R16383:16384 SF_Equiv <> c1 var
R16438:16443 SF_Equiv <> cequiv def
R16504:16506 SF_Imp <> ::x_'/'_x_'\\'_x not
R16509:16512 SF_Imp <> ::x_'/'_x_'\\'_x not
R16486:16494 SF_Equiv <> iff_trans thm
R16504:16506 SF_Imp <> ::x_'/'_x_'\\'_x not
R16509:16512 SF_Imp <> ::x_'/'_x_'\\'_x not
R16486:16494 SF_Equiv <> iff_trans thm
prf 17909:17923 <> CAss_congruence
R17959:17964 Coq.Init.Logic <> :type_scope:x_'->'_x not
R17965:17970 SF_Equiv <> cequiv def
R17985:17988 SF_Imp <> CAss constr
R17992:17994 SF_Equiv <> a1' var
R17990:17990 SF_Equiv <> i var
R17973:17976 SF_Imp <> CAss constr
R17980:17981 SF_Equiv <> a1 var
R17978:17978 SF_Equiv <> i var
R17946:17951 SF_Equiv <> aequiv def
R17956:17958 SF_Equiv <> a1' var
R17953:17954 SF_Equiv <> a1 var
R18107:18111 SF_Imp <> E_Ass constr
R18107:18111 SF_Imp <> E_Ass constr
R18193:18197 SF_Imp <> E_Ass constr
R18193:18197 SF_Imp <> E_Ass constr
prf 20055:20071 <> CWhile_congruence
R20112:20115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20129:20134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20135:20140 SF_Equiv <> cequiv def
R20164:20169 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20173:20176 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20180:20183 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20170:20172 SF_Equiv <> b1' var
R20177:20179 SF_Equiv <> c1' var
R20143:20148 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20151:20154 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20157:20160 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20149:20150 SF_Equiv <> b1 var
R20155:20156 SF_Equiv <> c1 var
R20116:20121 SF_Equiv <> cequiv def
R20126:20128 SF_Equiv <> c1' var
R20123:20124 SF_Equiv <> c1 var
R20099:20104 SF_Equiv <> bequiv def
R20109:20111 SF_Equiv <> b1' var
R20106:20107 SF_Equiv <> b1 var
R20227:20232 SF_Equiv <> bequiv def
R20234:20239 SF_Equiv <> cequiv def
R20331:20336 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20339:20342 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20345:20348 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20331:20336 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20339:20342 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20345:20348 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20466:20477 SF_Imp <> E_WhileFalse constr
R20466:20477 SF_Imp <> E_WhileFalse constr
R20542:20552 SF_Imp <> E_WhileTrue constr
R20542:20552 SF_Imp <> E_WhileTrue constr
R20801:20806 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20810:20813 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20817:20820 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20801:20806 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20810:20813 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20817:20820 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R20941:20952 SF_Imp <> E_WhileFalse constr
R20941:20952 SF_Imp <> E_WhileFalse constr
R21017:21027 SF_Imp <> E_WhileTrue constr
R21017:21027 SF_Imp <> E_WhileTrue constr
prf 21323:21337 <> CSeq_congruence
R21378:21381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21395:21400 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21401:21406 SF_Equiv <> cequiv def
R21421:21422 SF_Imp <> :com_scope:x_';;'_x not
R21418:21420 SF_Equiv <> c1' var
R21423:21425 SF_Equiv <> c2' var
R21411:21412 SF_Imp <> :com_scope:x_';;'_x not
R21409:21410 SF_Equiv <> c1 var
R21413:21414 SF_Equiv <> c2 var
R21382:21387 SF_Equiv <> cequiv def
R21392:21394 SF_Equiv <> c2' var
R21389:21390 SF_Equiv <> c2 var
R21365:21370 SF_Equiv <> cequiv def
R21375:21377 SF_Equiv <> c1' var
R21372:21373 SF_Equiv <> c1 var
prf 21534:21547 <> CIf_congruence
R21591:21594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21608:21611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21625:21630 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21631:21636 SF_Equiv <> cequiv def
R21675:21678 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21681:21686 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21690:21695 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21699:21701 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21679:21680 SF_Equiv <> b' var
R21687:21689 SF_Equiv <> c1' var
R21696:21698 SF_Equiv <> c2' var
R21639:21642 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21644:21649 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21652:21657 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21660:21662 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21643:21643 SF_Equiv <> b var
R21650:21651 SF_Equiv <> c1 var
R21658:21659 SF_Equiv <> c2 var
R21612:21617 SF_Equiv <> cequiv def
R21622:21624 SF_Equiv <> c2' var
R21619:21620 SF_Equiv <> c2 var
R21595:21600 SF_Equiv <> cequiv def
R21605:21607 SF_Equiv <> c1' var
R21602:21603 SF_Equiv <> c1 var
R21580:21585 SF_Equiv <> bequiv def
R21589:21590 SF_Equiv <> b' var
R21587:21587 SF_Equiv <> b var
def 21856:21873 <> congruence_example
R21878:21883 SF_Equiv <> cequiv def
R22029:22036 SF_Imp <> :com_scope:x_';;'_x not
R22023:22027 SF_Imp <> :com_scope:x_'::='_x not
R22022:22022 SF_Imp <> X def
R22037:22040 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22046:22063 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22075:22118 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22127:22134 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R22042:22044 SF_Imp <> :bexp_scope:x_'='_x not
R22041:22041 SF_Imp <> X def
R22065:22069 SF_Imp <> :com_scope:x_'::='_x not
R22064:22064 SF_Imp <> Y def
R22071:22073 SF_Imp <> :aexp_scope:x_'-'_x not
R22070:22070 SF_Imp <> X def
R22074:22074 SF_Imp <> X def
R22120:22124 SF_Imp <> :com_scope:x_'::='_x not
R22119:22119 SF_Imp <> Y def
R21918:21925 SF_Imp <> :com_scope:x_';;'_x not
R21912:21916 SF_Imp <> :com_scope:x_'::='_x not
R21911:21911 SF_Imp <> X def
R21926:21929 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21935:21952 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21960:21977 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21986:21993 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21931:21933 SF_Imp <> :bexp_scope:x_'='_x not
R21930:21930 SF_Imp <> X def
R21954:21958 SF_Imp <> :com_scope:x_'::='_x not
R21953:21953 SF_Imp <> Y def
R21979:21983 SF_Imp <> :com_scope:x_'::='_x not
R21978:21978 SF_Imp <> Y def
R22153:22167 SF_Equiv <> CSeq_congruence prfax
R22153:22167 SF_Equiv <> CSeq_congruence prfax
R22180:22190 SF_Equiv <> refl_cequiv thm
R22180:22190 SF_Equiv <> refl_cequiv thm
R22203:22216 SF_Equiv <> CIf_congruence prfax
R22203:22216 SF_Equiv <> CIf_congruence prfax
R22231:22241 SF_Equiv <> refl_bequiv thm
R22231:22241 SF_Equiv <> refl_bequiv thm
R22256:22270 SF_Equiv <> CAss_congruence thm
R22256:22270 SF_Equiv <> CAss_congruence thm
R22280:22285 SF_Equiv <> aequiv def
R22319:22328 Coq.Arith.Minus <> minus_diag syndef
R22319:22328 Coq.Arith.Minus <> minus_diag syndef
R22343:22353 SF_Equiv <> refl_cequiv thm
R22343:22353 SF_Equiv <> refl_cequiv thm
def 23113:23124 <> atrans_sound
R23140:23143 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23144:23147 SF_Imp <> aexp ind
R23136:23139 SF_Imp <> aexp ind
R23174:23177 SF_Imp <> aexp ind
R23185:23190 SF_Equiv <> aequiv def
R23195:23200 SF_Equiv <> atrans var
R23202:23202 SF_Equiv <> a var
R23192:23192 SF_Equiv <> a var
def 23218:23229 <> btrans_sound
R23245:23248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23249:23252 SF_Imp <> bexp ind
R23241:23244 SF_Imp <> bexp ind
R23279:23282 SF_Imp <> bexp ind
R23290:23295 SF_Equiv <> bequiv def
R23300:23305 SF_Equiv <> btrans var
R23307:23307 SF_Equiv <> b var
R23297:23297 SF_Equiv <> b var
def 23323:23334 <> ctrans_sound
R23349:23352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23353:23355 SF_Imp <> com ind
R23346:23348 SF_Imp <> com ind
R23382:23384 SF_Imp <> com ind
R23392:23397 SF_Equiv <> cequiv def
R23402:23407 SF_Equiv <> ctrans var
R23409:23409 SF_Equiv <> c var
R23399:23399 SF_Equiv <> c var
def 23735:23753 <> fold_constants_aexp
R23760:23763 SF_Imp <> aexp ind
R23768:23771 SF_Imp <> aexp ind
R23784:23784 SF_Equiv <> a var
R23795:23798 SF_Imp <> ANum constr
R23811:23814 SF_Imp <> ANum constr
R23822:23824 SF_Imp <> AId constr
R23838:23840 SF_Imp <> AId constr
R23848:23852 SF_Imp <> APlus constr
R23874:23874 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23897:23898 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23921:23921 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23875:23893 SF_Equiv <> fold_constants_aexp def
R23899:23917 SF_Equiv <> fold_constants_aexp def
R23938:23938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23946:23947 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23955:23955 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23939:23942 SF_Imp <> ANum constr
R23948:23951 SF_Imp <> ANum constr
R23960:23963 SF_Imp <> ANum constr
R23968:23970 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23981:23981 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23985:23986 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23990:23990 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23995:23999 SF_Imp <> APlus constr
R24021:24026 SF_Imp <> AMinus constr
R24047:24047 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24070:24071 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24094:24094 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24048:24066 SF_Equiv <> fold_constants_aexp def
R24072:24090 SF_Equiv <> fold_constants_aexp def
R24111:24111 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24119:24120 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24128:24128 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24112:24115 SF_Imp <> ANum constr
R24121:24124 SF_Imp <> ANum constr
R24133:24136 SF_Imp <> ANum constr
R24141:24143 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R24154:24154 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24158:24159 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24163:24163 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24168:24173 SF_Imp <> AMinus constr
R24195:24199 SF_Imp <> AMult constr
R24221:24221 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24244:24245 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24268:24268 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24222:24240 SF_Equiv <> fold_constants_aexp def
R24246:24264 SF_Equiv <> fold_constants_aexp def
R24285:24285 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24293:24294 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24302:24302 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24286:24289 SF_Imp <> ANum constr
R24295:24298 SF_Imp <> ANum constr
R24307:24310 SF_Imp <> ANum constr
R24315:24317 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24328:24328 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24332:24333 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24337:24337 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24342:24346 SF_Imp <> AMult constr
def 24483:24495 <> fold_aexp_ex1
R24536:24539 Coq.Init.Logic <> :type_scope:x_'='_x not
R24545:24545 Coq.Init.Logic <> :type_scope:x_'='_x not
R24503:24521 SF_Equiv <> fold_constants_aexp def
R24524:24524 SF_Imp <> :aexp_scope:x_'*'_x not
R24530:24533 SF_Imp <> :aexp_scope:x_'*'_x not
R24526:24528 SF_Imp <> :aexp_scope:x_'+'_x not
R24534:24534 SF_Imp <> X def
R24541:24543 SF_Imp <> :aexp_scope:x_'*'_x not
R24544:24544 SF_Imp <> X def
def 24887:24899 <> fold_aexp_ex2
R24944:24947 Coq.Init.Logic <> :type_scope:x_'='_x not
R24959:24959 Coq.Init.Logic <> :type_scope:x_'='_x not
R24905:24923 SF_Equiv <> fold_constants_aexp def
R24927:24930 SF_Imp <> :aexp_scope:x_'-'_x not
R24942:24942 SF_Imp <> :aexp_scope:x_'-'_x not
R24926:24926 SF_Imp <> X def
R24931:24931 SF_Imp <> :aexp_scope:x_'+'_x not
R24937:24940 SF_Imp <> :aexp_scope:x_'+'_x not
R24933:24935 SF_Imp <> :aexp_scope:x_'*'_x not
R24941:24941 SF_Imp <> Y def
R24949:24952 SF_Imp <> :aexp_scope:x_'-'_x not
R24958:24958 SF_Imp <> :aexp_scope:x_'-'_x not
R24948:24948 SF_Imp <> X def
R24954:24956 SF_Imp <> :aexp_scope:x_'+'_x not
R24957:24957 SF_Imp <> Y def
def 25179:25197 <> fold_constants_bexp
R25204:25207 SF_Imp <> bexp ind
R25212:25215 SF_Imp <> bexp ind
R25228:25228 SF_Equiv <> b var
R25239:25243 SF_Imp <> BTrue constr
R25255:25259 SF_Imp <> BTrue constr
R25265:25270 SF_Imp <> BFalse constr
R25281:25286 SF_Imp <> BFalse constr
R25292:25294 SF_Imp <> BEq constr
R25318:25318 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25341:25342 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25365:25365 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25319:25337 SF_Equiv <> fold_constants_aexp def
R25343:25361 SF_Equiv <> fold_constants_aexp def
R25380:25380 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25388:25389 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25397:25397 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25381:25384 SF_Imp <> ANum constr
R25390:25393 SF_Imp <> ANum constr
R25415:25421 Coq.Arith.EqNat <> beq_nat syndef
R25445:25450 SF_Imp <> BFalse constr
R25434:25438 SF_Imp <> BTrue constr
R25460:25460 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25464:25465 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25469:25469 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25484:25486 SF_Imp <> BEq constr
R25510:25512 SF_Imp <> BLe constr
R25536:25536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25559:25560 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25583:25583 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25537:25555 SF_Equiv <> fold_constants_aexp def
R25561:25579 SF_Equiv <> fold_constants_aexp def
R25598:25598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25606:25607 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25615:25615 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25599:25602 SF_Imp <> ANum constr
R25608:25611 SF_Imp <> ANum constr
R25633:25635 Coq.Arith.Compare_dec <> leb syndef
R25659:25664 SF_Imp <> BFalse constr
R25648:25652 SF_Imp <> BTrue constr
R25674:25674 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25678:25679 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25683:25683 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25698:25700 SF_Imp <> BLe constr
R25724:25727 SF_Imp <> BNot constr
R25749:25767 SF_Equiv <> fold_constants_bexp def
R25786:25790 SF_Imp <> BTrue constr
R25795:25800 SF_Imp <> BFalse constr
R25810:25815 SF_Imp <> BFalse constr
R25820:25824 SF_Imp <> BTrue constr
R25841:25844 SF_Imp <> BNot constr
R25864:25867 SF_Imp <> BAnd constr
R25891:25891 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25914:25915 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25938:25938 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25892:25910 SF_Equiv <> fold_constants_bexp def
R25916:25934 SF_Equiv <> fold_constants_bexp def
R25953:25953 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25959:25960 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25966:25966 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25954:25958 SF_Imp <> BTrue constr
R25961:25965 SF_Imp <> BTrue constr
R25971:25975 SF_Imp <> BTrue constr
R25985:25985 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25991:25992 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25999:25999 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R25986:25990 SF_Imp <> BTrue constr
R25993:25998 SF_Imp <> BFalse constr
R26004:26009 SF_Imp <> BFalse constr
R26019:26019 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26026:26027 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26033:26033 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26020:26025 SF_Imp <> BFalse constr
R26028:26032 SF_Imp <> BTrue constr
R26038:26043 SF_Imp <> BFalse constr
R26053:26053 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26060:26061 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26068:26068 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26054:26059 SF_Imp <> BFalse constr
R26062:26067 SF_Imp <> BFalse constr
R26073:26078 SF_Imp <> BFalse constr
R26088:26088 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26092:26093 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26097:26097 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R26102:26105 SF_Imp <> BAnd constr
def 26141:26153 <> fold_bexp_ex1
R26206:26208 Coq.Init.Logic <> :type_scope:x_'='_x not
R26159:26177 SF_Equiv <> fold_constants_bexp def
R26184:26187 SF_Imp <> :bexp_scope:x_'&&'_x not
R26180:26183 Coq.Init.Datatypes <> true constr
R26188:26190 SF_Imp <> :bexp_scope:'!'_x not
R26204:26204 SF_Imp <> :bexp_scope:'!'_x not
R26196:26199 SF_Imp <> :bexp_scope:x_'&&'_x not
R26191:26195 Coq.Init.Datatypes <> false constr
R26200:26203 Coq.Init.Datatypes <> true constr
R26209:26212 Coq.Init.Datatypes <> true constr
def 26249:26261 <> fold_bexp_ex2
R26319:26324 Coq.Init.Logic <> :type_scope:x_'='_x not
R26340:26340 Coq.Init.Logic <> :type_scope:x_'='_x not
R26267:26285 SF_Equiv <> fold_constants_bexp def
R26288:26288 SF_Imp <> :bexp_scope:x_'&&'_x not
R26294:26299 SF_Imp <> :bexp_scope:x_'&&'_x not
R26317:26317 SF_Imp <> :bexp_scope:x_'&&'_x not
R26290:26292 SF_Imp <> :bexp_scope:x_'='_x not
R26289:26289 SF_Imp <> X def
R26293:26293 SF_Imp <> Y def
R26301:26304 SF_Imp <> :bexp_scope:x_'='_x not
R26316:26316 SF_Imp <> :bexp_scope:x_'='_x not
R26306:26309 SF_Imp <> :aexp_scope:x_'-'_x not
R26315:26315 SF_Imp <> :aexp_scope:x_'-'_x not
R26311:26313 SF_Imp <> :aexp_scope:x_'+'_x not
R26325:26325 SF_Imp <> :bexp_scope:x_'&&'_x not
R26331:26335 SF_Imp <> :bexp_scope:x_'&&'_x not
R26327:26329 SF_Imp <> :bexp_scope:x_'='_x not
R26326:26326 SF_Imp <> X def
R26330:26330 SF_Imp <> Y def
R26336:26339 Coq.Init.Datatypes <> true constr
def 26494:26511 <> fold_constants_com
R26518:26520 SF_Imp <> com ind
R26525:26527 SF_Imp <> com ind
R26540:26540 SF_Equiv <> c var
R26551:26554 SF_Imp <> :com_scope:'SKIP' not
R26570:26573 SF_Imp <> :com_scope:'SKIP' not
R26580:26584 SF_Imp <> :com_scope:x_'::='_x not
R26597:26600 SF_Imp <> CAss constr
R26605:26623 SF_Equiv <> fold_constants_aexp def
R26634:26637 SF_Imp <> :com_scope:x_';;'_x not
R26651:26651 SF_Imp <> :com_scope:x_';;'_x not
R26673:26678 SF_Imp <> :com_scope:x_';;'_x not
R26700:26700 SF_Imp <> :com_scope:x_';;'_x not
R26652:26669 SF_Equiv <> fold_constants_com def
R26679:26696 SF_Equiv <> fold_constants_com def
R26706:26709 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26711:26716 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26719:26724 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26727:26729 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26746:26764 SF_Equiv <> fold_constants_bexp def
R26781:26785 SF_Imp <> BTrue constr
R26790:26807 SF_Equiv <> fold_constants_com def
R26820:26825 SF_Imp <> BFalse constr
R26830:26847 SF_Equiv <> fold_constants_com def
R26866:26869 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26872:26877 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26899:26925 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26947:26949 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R26878:26895 SF_Equiv <> fold_constants_com def
R26926:26943 SF_Equiv <> fold_constants_com def
R26965:26970 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R26972:26975 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R26977:26980 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R26997:27015 SF_Equiv <> fold_constants_bexp def
R27032:27036 SF_Imp <> BTrue constr
R27041:27046 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27052:27055 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27060:27063 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27047:27051 SF_Imp <> BTrue constr
R27056:27059 SF_Imp <> :com_scope:'SKIP' not
R27073:27078 SF_Imp <> BFalse constr
R27083:27086 SF_Imp <> :com_scope:'SKIP' not
R27102:27107 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27110:27114 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27135:27139 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27115:27132 SF_Equiv <> fold_constants_com def
R27134:27134 SF_Equiv <> c var
def 27167:27178 <> fold_com_ex1
R27481:27520 Coq.Init.Logic <> :type_scope:x_'='_x not
R27686:27686 Coq.Init.Logic <> :type_scope:x_'='_x not
R27184:27201 SF_Equiv <> fold_constants_com def
R27247:27254 SF_Imp <> :com_scope:x_';;'_x not
R27237:27241 SF_Imp <> :com_scope:x_'::='_x not
R27236:27236 SF_Imp <> X def
R27243:27245 SF_Imp <> :aexp_scope:x_'+'_x not
R27266:27273 SF_Imp <> :com_scope:x_';;'_x not
R27256:27260 SF_Imp <> :com_scope:x_'::='_x not
R27255:27255 SF_Imp <> Y def
R27262:27264 SF_Imp <> :aexp_scope:x_'-'_x not
R27261:27261 SF_Imp <> X def
R27345:27352 SF_Imp <> :com_scope:x_';;'_x not
R27274:27277 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27295:27307 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27312:27329 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27337:27344 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27278:27278 SF_Imp <> :bexp_scope:x_'='_x not
R27284:27288 SF_Imp <> :bexp_scope:x_'='_x not
R27294:27294 SF_Imp <> :bexp_scope:x_'='_x not
R27280:27282 SF_Imp <> :aexp_scope:x_'-'_x not
R27279:27279 SF_Imp <> X def
R27283:27283 SF_Imp <> Y def
R27290:27292 SF_Imp <> :aexp_scope:x_'+'_x not
R27308:27311 SF_Imp <> :com_scope:'SKIP' not
R27331:27335 SF_Imp <> :com_scope:x_'::='_x not
R27330:27330 SF_Imp <> Y def
R27430:27437 SF_Imp <> :com_scope:x_';;'_x not
R27353:27356 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27375:27392 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27400:27417 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27422:27429 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27358:27362 SF_Imp <> :bexp_scope:x_'<='_x not
R27374:27374 SF_Imp <> :bexp_scope:x_'<='_x not
R27364:27367 SF_Imp <> :aexp_scope:x_'-'_x not
R27373:27373 SF_Imp <> :aexp_scope:x_'-'_x not
R27369:27371 SF_Imp <> :aexp_scope:x_'+'_x not
R27394:27398 SF_Imp <> :com_scope:x_'::='_x not
R27393:27393 SF_Imp <> Y def
R27418:27421 SF_Imp <> :com_scope:'SKIP' not
R27438:27443 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27449:27459 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27471:27479 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27445:27447 SF_Imp <> :bexp_scope:x_'='_x not
R27444:27444 SF_Imp <> Y def
R27461:27465 SF_Imp <> :com_scope:x_'::='_x not
R27460:27460 SF_Imp <> X def
R27467:27469 SF_Imp <> :aexp_scope:x_'+'_x not
R27466:27466 SF_Imp <> X def
R27528:27535 SF_Imp <> :com_scope:x_';;'_x not
R27522:27526 SF_Imp <> :com_scope:x_'::='_x not
R27521:27521 SF_Imp <> X def
R27547:27554 SF_Imp <> :com_scope:x_';;'_x not
R27537:27541 SF_Imp <> :com_scope:x_'::='_x not
R27536:27536 SF_Imp <> Y def
R27543:27545 SF_Imp <> :aexp_scope:x_'-'_x not
R27542:27542 SF_Imp <> X def
R27620:27627 SF_Imp <> :com_scope:x_';;'_x not
R27555:27558 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27570:27582 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27587:27604 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27612:27619 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27559:27559 SF_Imp <> :bexp_scope:x_'='_x not
R27565:27568 SF_Imp <> :bexp_scope:x_'='_x not
R27561:27563 SF_Imp <> :aexp_scope:x_'-'_x not
R27560:27560 SF_Imp <> X def
R27564:27564 SF_Imp <> Y def
R27583:27586 SF_Imp <> :com_scope:'SKIP' not
R27606:27610 SF_Imp <> :com_scope:x_'::='_x not
R27605:27605 SF_Imp <> Y def
R27635:27642 SF_Imp <> :com_scope:x_';;'_x not
R27629:27633 SF_Imp <> :com_scope:x_'::='_x not
R27628:27628 SF_Imp <> Y def
R27643:27648 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27654:27664 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27676:27685 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R27650:27652 SF_Imp <> :bexp_scope:x_'='_x not
R27649:27649 SF_Imp <> Y def
R27666:27670 SF_Imp <> :com_scope:x_'::='_x not
R27665:27665 SF_Imp <> X def
R27672:27674 SF_Imp <> :aexp_scope:x_'+'_x not
R27671:27671 SF_Imp <> X def
prf 27950:27974 <> fold_constants_aexp_sound
R27980:27991 SF_Equiv <> atrans_sound def
R27993:28011 SF_Equiv <> fold_constants_aexp def
R28030:28041 SF_Equiv <> atrans_sound def
R28061:28066 SF_Equiv <> aequiv def
R28475:28493 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28475:28493 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28475:28493 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28475:28493 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
R28519:28537 SF_Equiv <> fold_constants_aexp def
prf 31481:31505 <> fold_constants_bexp_sound
R31510:31521 SF_Equiv <> btrans_sound def
R31523:31541 SF_Equiv <> fold_constants_bexp def
R31560:31571 SF_Equiv <> btrans_sound def
R31591:31596 SF_Equiv <> bequiv def
R32075:32093 SF_Equiv <> fold_constants_aexp def
R32075:32093 SF_Equiv <> fold_constants_aexp def
R32132:32150 SF_Equiv <> fold_constants_aexp def
R32132:32150 SF_Equiv <> fold_constants_aexp def
R32188:32192 SF_Imp <> aeval def
R32207:32211 SF_Imp <> aeval def
R32254:32278 SF_Equiv <> fold_constants_aexp_sound thm
R32188:32192 SF_Imp <> aeval def
R32207:32211 SF_Imp <> aeval def
R32254:32278 SF_Equiv <> fold_constants_aexp_sound thm
R32254:32278 SF_Equiv <> fold_constants_aexp_sound thm
R32308:32312 SF_Imp <> aeval def
R32327:32331 SF_Imp <> aeval def
R32374:32398 SF_Equiv <> fold_constants_aexp_sound thm
R32308:32312 SF_Imp <> aeval def
R32327:32331 SF_Imp <> aeval def
R32374:32398 SF_Equiv <> fold_constants_aexp_sound thm
R32374:32398 SF_Equiv <> fold_constants_aexp_sound thm
R32585:32591 Coq.Arith.EqNat <> beq_nat syndef
R32585:32591 Coq.Arith.EqNat <> beq_nat syndef
R32693:32711 SF_Equiv <> fold_constants_bexp def
R32693:32711 SF_Equiv <> fold_constants_bexp def
R32820:32838 SF_Equiv <> fold_constants_bexp def
R32820:32838 SF_Equiv <> fold_constants_bexp def
R32877:32895 SF_Equiv <> fold_constants_bexp def
R32877:32895 SF_Equiv <> fold_constants_bexp def
prf 33161:33184 <> fold_constants_com_sound
R33190:33201 SF_Equiv <> ctrans_sound def
R33203:33220 SF_Equiv <> fold_constants_com def
R33239:33250 SF_Equiv <> ctrans_sound def
R33306:33316 SF_Equiv <> refl_cequiv thm
R33306:33316 SF_Equiv <> refl_cequiv thm
R33339:33353 SF_Equiv <> CAss_congruence thm
R33339:33353 SF_Equiv <> CAss_congruence thm
R33376:33400 SF_Equiv <> fold_constants_aexp_sound thm
R33376:33400 SF_Equiv <> fold_constants_aexp_sound thm
R33422:33436 SF_Equiv <> CSeq_congruence prfax
R33422:33436 SF_Equiv <> CSeq_congruence prfax
R33477:33482 SF_Equiv <> bequiv def
R33487:33505 SF_Equiv <> fold_constants_bexp def
R33477:33482 SF_Equiv <> bequiv def
R33487:33505 SF_Equiv <> fold_constants_bexp def
R33526:33550 SF_Equiv <> fold_constants_bexp_sound prfax
R33526:33550 SF_Equiv <> fold_constants_bexp_sound prfax
R33569:33587 SF_Equiv <> fold_constants_bexp def
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33569:33587 SF_Equiv <> fold_constants_bexp def
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33619:33632 SF_Equiv <> CIf_congruence prfax
R33844:33855 SF_Equiv <> trans_cequiv thm
R33844:33855 SF_Equiv <> trans_cequiv thm
R33894:33901 SF_Equiv <> IFB_true thm
R33894:33901 SF_Equiv <> IFB_true thm
R33955:33966 SF_Equiv <> trans_cequiv thm
R33955:33966 SF_Equiv <> trans_cequiv thm
R34005:34013 SF_Equiv <> IFB_false prfax
R34005:34013 SF_Equiv <> IFB_false prfax
def 36488:36497 <> subst_aexp
R36504:36509 Coq.Strings.String <> string ind
R36517:36520 SF_Imp <> aexp ind
R36528:36531 SF_Imp <> aexp ind
R36536:36539 SF_Imp <> aexp ind
R36552:36552 SF_Equiv <> a var
R36563:36566 SF_Imp <> ANum constr
R36585:36588 SF_Imp <> ANum constr
R36596:36598 SF_Imp <> AId constr
R36621:36630 SF_Maps <> beq_string def
R36632:36632 SF_Equiv <> i var
R36649:36651 SF_Imp <> AId constr
R36642:36642 SF_Equiv <> u var
R36660:36664 SF_Imp <> APlus constr
R36682:36686 SF_Imp <> APlus constr
R36709:36718 SF_Equiv <> subst_aexp def
R36722:36722 SF_Equiv <> u var
R36720:36720 SF_Equiv <> i var
R36689:36698 SF_Equiv <> subst_aexp def
R36702:36702 SF_Equiv <> u var
R36700:36700 SF_Equiv <> i var
R36732:36737 SF_Imp <> AMinus constr
R36754:36759 SF_Imp <> AMinus constr
R36782:36791 SF_Equiv <> subst_aexp def
R36795:36795 SF_Equiv <> u var
R36793:36793 SF_Equiv <> i var
R36762:36771 SF_Equiv <> subst_aexp def
R36775:36775 SF_Equiv <> u var
R36773:36773 SF_Equiv <> i var
R36805:36809 SF_Imp <> AMult constr
R36827:36831 SF_Imp <> AMult constr
R36854:36863 SF_Equiv <> subst_aexp def
R36867:36867 SF_Equiv <> u var
R36865:36865 SF_Equiv <> i var
R36834:36843 SF_Equiv <> subst_aexp def
R36847:36847 SF_Equiv <> u var
R36845:36845 SF_Equiv <> i var
def 36889:36901 <> subst_aexp_ex
R36937:36942 Coq.Init.Logic <> :type_scope:x_'='_x not
R36956:36956 Coq.Init.Logic <> :type_scope:x_'='_x not
R36907:36916 SF_Equiv <> subst_aexp def
R36932:36934 SF_Imp <> :aexp_scope:x_'+'_x not
R36931:36931 SF_Imp <> Y def
R36935:36935 SF_Imp <> X def
R36923:36925 SF_Imp <> :aexp_scope:x_'+'_x not
R36918:36918 SF_Imp <> X def
R36944:36947 SF_Imp <> :aexp_scope:x_'+'_x not
R36955:36955 SF_Imp <> :aexp_scope:x_'+'_x not
R36943:36943 SF_Imp <> Y def
R36950:36952 SF_Imp <> :aexp_scope:x_'+'_x not
def 37152:37171 <> subst_equiv_property
R37198:37203 SF_Equiv <> cequiv def
R37248:37250 SF_Imp <> :com_scope:x_';;'_x not
R37241:37245 SF_Imp <> :com_scope:x_'::='_x not
R37239:37240 SF_Equiv <> i1 var
R37246:37247 SF_Equiv <> a1 var
R37253:37257 SF_Imp <> :com_scope:x_'::='_x not
R37251:37252 SF_Equiv <> i2 var
R37258:37267 SF_Equiv <> subst_aexp def
R37275:37276 SF_Equiv <> a2 var
R37272:37273 SF_Equiv <> a1 var
R37269:37270 SF_Equiv <> i1 var
R37215:37217 SF_Imp <> :com_scope:x_';;'_x not
R37208:37212 SF_Imp <> :com_scope:x_'::='_x not
R37206:37207 SF_Equiv <> i1 var
R37213:37214 SF_Equiv <> a1 var
R37220:37224 SF_Imp <> :com_scope:x_'::='_x not
R37218:37219 SF_Equiv <> i2 var
R37225:37226 SF_Equiv <> a2 var
prf 38347:38359 <> subst_inequiv
R38365:38366 Coq.Init.Logic <> :type_scope:'~'_x not
R38367:38386 SF_Equiv <> subst_equiv_property def
R38405:38424 SF_Equiv <> subst_equiv_property def
R38618:38632 SF_Imp <> :com_scope:x_';;'_x not
R38608:38612 SF_Imp <> :com_scope:x_'::='_x not
R38607:38607 SF_Imp <> X def
R38614:38616 SF_Imp <> :aexp_scope:x_'+'_x not
R38613:38613 SF_Imp <> X def
R38634:38638 SF_Imp <> :com_scope:x_'::='_x not
R38633:38633 SF_Imp <> Y def
R38639:38639 SF_Imp <> X def
R38618:38632 SF_Imp <> :com_scope:x_';;'_x not
R38608:38612 SF_Imp <> :com_scope:x_'::='_x not
R38607:38607 SF_Imp <> X def
R38614:38616 SF_Imp <> :aexp_scope:x_'+'_x not
R38613:38613 SF_Imp <> X def
R38634:38638 SF_Imp <> :com_scope:x_'::='_x not
R38633:38633 SF_Imp <> Y def
R38639:38639 SF_Imp <> X def
R38678:38692 SF_Imp <> :com_scope:x_';;'_x not
R38668:38672 SF_Imp <> :com_scope:x_'::='_x not
R38667:38667 SF_Imp <> X def
R38674:38676 SF_Imp <> :aexp_scope:x_'+'_x not
R38673:38673 SF_Imp <> X def
R38694:38698 SF_Imp <> :com_scope:x_'::='_x not
R38693:38693 SF_Imp <> Y def
R38700:38702 SF_Imp <> :aexp_scope:x_'+'_x not
R38699:38699 SF_Imp <> X def
R38678:38692 SF_Imp <> :com_scope:x_';;'_x not
R38668:38672 SF_Imp <> :com_scope:x_'::='_x not
R38667:38667 SF_Imp <> X def
R38674:38676 SF_Imp <> :aexp_scope:x_'+'_x not
R38673:38673 SF_Imp <> X def
R38694:38698 SF_Imp <> :com_scope:x_'::='_x not
R38693:38693 SF_Imp <> Y def
R38700:38702 SF_Imp <> :aexp_scope:x_'+'_x not
R38699:38699 SF_Imp <> X def
R38729:38734 SF_Equiv <> cequiv def
R38729:38734 SF_Equiv <> cequiv def
R38950:38950 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38952:38956 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38958:38960 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38962:38966 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38968:38968 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38951:38951 SF_Imp <> X def
R38961:38961 SF_Imp <> Y def
R38950:38950 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38952:38956 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38958:38960 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38962:38966 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38968:38968 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38951:38951 SF_Imp <> X def
R38961:38961 SF_Imp <> Y def
R38989:38989 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38991:38995 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38997:38999 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R39001:39005 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R39007:39007 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38990:38990 SF_Imp <> X def
R39000:39000 SF_Imp <> Y def
R38989:38989 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38991:38995 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38997:38999 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R39001:39005 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R39007:39007 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R38990:38990 SF_Imp <> X def
R39000:39000 SF_Imp <> Y def
R39033:39035 SF_Imp <> ::x_'/'_x_'\\'_x not
R39045:39048 SF_Imp <> ::x_'/'_x_'\\'_x not
R39036:39041 SF_Maps <> ::'{'_'-->'_x_'}' not
R39043:39044 SF_Maps <> ::'{'_'-->'_x_'}' not
R39071:39073 SF_Imp <> ::x_'/'_x_'\\'_x not
R39083:39086 SF_Imp <> ::x_'/'_x_'\\'_x not
R39074:39079 SF_Maps <> ::'{'_'-->'_x_'}' not
R39081:39082 SF_Maps <> ::'{'_'-->'_x_'}' not
R39139:39139 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39145 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39147:39147 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39140:39140 SF_Imp <> X def
R39120:39124 SF_Imp <> E_Seq constr
R39164:39168 SF_Imp <> E_Ass constr
R39033:39035 SF_Imp <> ::x_'/'_x_'\\'_x not
R39045:39048 SF_Imp <> ::x_'/'_x_'\\'_x not
R39036:39041 SF_Maps <> ::'{'_'-->'_x_'}' not
R39043:39044 SF_Maps <> ::'{'_'-->'_x_'}' not
R39071:39073 SF_Imp <> ::x_'/'_x_'\\'_x not
R39083:39086 SF_Imp <> ::x_'/'_x_'\\'_x not
R39074:39079 SF_Maps <> ::'{'_'-->'_x_'}' not
R39081:39082 SF_Maps <> ::'{'_'-->'_x_'}' not
R39071:39073 SF_Imp <> ::x_'/'_x_'\\'_x not
R39083:39086 SF_Imp <> ::x_'/'_x_'\\'_x not
R39074:39079 SF_Maps <> ::'{'_'-->'_x_'}' not
R39081:39082 SF_Maps <> ::'{'_'-->'_x_'}' not
R39139:39139 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39145 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39147:39147 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39140:39140 SF_Imp <> X def
R39120:39124 SF_Imp <> E_Seq constr
R39164:39168 SF_Imp <> E_Ass constr
R39164:39168 SF_Imp <> E_Ass constr
R39139:39139 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39145 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39147:39147 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39140:39140 SF_Imp <> X def
R39120:39124 SF_Imp <> E_Seq constr
R39164:39168 SF_Imp <> E_Ass constr
R39164:39168 SF_Imp <> E_Ass constr
R39139:39139 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39145 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39147:39147 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39140:39140 SF_Imp <> X def
R39120:39124 SF_Imp <> E_Seq constr
R39164:39168 SF_Imp <> E_Ass constr
R39164:39168 SF_Imp <> E_Ass constr
R39139:39139 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39141:39145 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39147:39147 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R39140:39140 SF_Imp <> X def
R39120:39124 SF_Imp <> E_Seq constr
R39323:39325 Coq.Init.Logic <> :type_scope:x_'='_x not
R39346:39364 SF_Imp <> ceval_deterministic thm
R39369:39374 SF_Maps <> ::'{'_'-->'_x_'}' not
R39376:39377 SF_Maps <> ::'{'_'-->'_x_'}' not
R39323:39325 Coq.Init.Logic <> :type_scope:x_'='_x not
R39346:39364 SF_Imp <> ceval_deterministic thm
R39369:39374 SF_Maps <> ::'{'_'-->'_x_'}' not
R39376:39377 SF_Maps <> ::'{'_'-->'_x_'}' not
R39419:39421 Coq.Init.Logic <> :type_scope:x_'='_x not
R39418:39418 SF_Imp <> Y def
R39426:39426 SF_Imp <> Y def
R39419:39421 Coq.Init.Logic <> :type_scope:x_'='_x not
R39418:39418 SF_Imp <> Y def
R39426:39426 SF_Imp <> Y def
ind 39834:39853 <> var_not_used_in_aexp
constr 39888:39893 <> VNUNum
constr 39942:39946 <> VNUId
constr 40004:40010 <> VNUPlus
constr 40144:40151 <> VNUMinus
constr 40286:40292 <> VNUMult
R39858:39863 Coq.Strings.String <> string ind
R39872:39875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39868:39871 SF_Imp <> aexp ind
R39906:39925 SF_Equiv <> var_not_used_in_aexp ind
R39930:39933 SF_Imp <> ANum constr
R39935:39935 SF_Equiv <> n var
R39927:39927 SF_Equiv <> X var
R39965:39968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39969:39988 SF_Equiv <> var_not_used_in_aexp ind
R39993:39995 SF_Imp <> AId constr
R39997:39997 SF_Equiv <> Y var
R39990:39990 SF_Equiv <> X var
R39960:39963 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R39959:39959 SF_Equiv <> X var
R39964:39964 SF_Equiv <> Y var
R40058:40067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40093:40102 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40103:40122 SF_Equiv <> var_not_used_in_aexp ind
R40127:40131 SF_Imp <> APlus constr
R40136:40137 SF_Equiv <> a2 var
R40133:40134 SF_Equiv <> a1 var
R40124:40124 SF_Equiv <> X var
R40068:40087 SF_Equiv <> var_not_used_in_aexp ind
R40091:40092 SF_Equiv <> a2 var
R40089:40089 SF_Equiv <> X var
R40033:40052 SF_Equiv <> var_not_used_in_aexp ind
R40056:40057 SF_Equiv <> a1 var
R40054:40054 SF_Equiv <> X var
R40199:40208 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40234:40243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40244:40263 SF_Equiv <> var_not_used_in_aexp ind
R40268:40273 SF_Imp <> AMinus constr
R40278:40279 SF_Equiv <> a2 var
R40275:40276 SF_Equiv <> a1 var
R40265:40265 SF_Equiv <> X var
R40209:40228 SF_Equiv <> var_not_used_in_aexp ind
R40232:40233 SF_Equiv <> a2 var
R40230:40230 SF_Equiv <> X var
R40174:40193 SF_Equiv <> var_not_used_in_aexp ind
R40197:40198 SF_Equiv <> a1 var
R40195:40195 SF_Equiv <> X var
R40340:40349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40375:40384 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40385:40404 SF_Equiv <> var_not_used_in_aexp ind
R40409:40413 SF_Imp <> AMult constr
R40418:40419 SF_Equiv <> a2 var
R40415:40416 SF_Equiv <> a1 var
R40406:40406 SF_Equiv <> X var
R40350:40369 SF_Equiv <> var_not_used_in_aexp ind
R40373:40374 SF_Equiv <> a2 var
R40371:40371 SF_Equiv <> X var
R40315:40334 SF_Equiv <> var_not_used_in_aexp ind
R40338:40339 SF_Equiv <> a1 var
R40336:40336 SF_Equiv <> X var
prf 40430:40444 <> aeval_weakening
R40492:40497 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40525:40527 Coq.Init.Logic <> :type_scope:x_'='_x not
R40498:40502 SF_Imp <> aeval def
R40524:40524 SF_Equiv <> a var
R40507:40511 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R40513:40517 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R40520:40521 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R40505:40506 SF_Equiv <> st var
R40512:40512 SF_Equiv <> i var
R40518:40519 SF_Equiv <> ni var
R40528:40532 SF_Imp <> aeval def
R40537:40537 SF_Equiv <> a var
R40534:40535 SF_Equiv <> st var
R40468:40487 SF_Equiv <> var_not_used_in_aexp ind
R40491:40491 SF_Equiv <> a var
R40489:40489 SF_Equiv <> i var
prf 40837:40852 <> inequiv_exercise
R40857:40858 Coq.Init.Logic <> :type_scope:'~'_x not
R40859:40864 SF_Equiv <> cequiv def
R40891:40894 SF_Imp <> :com_scope:'SKIP' not
R40867:40872 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40877:40880 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40885:40888 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40873:40876 Coq.Init.Datatypes <> true constr
R40881:40884 SF_Imp <> :com_scope:'SKIP' not
mod 43002:43005 <> Himp
ind 43103:43105 Himp com
constr 43121:43125 Himp CSkip
constr 43137:43140 Himp CAss
constr 43170:43173 Himp CSeq
constr 43199:43201 Himp CIf
constr 43235:43240 Himp CWhile
constr 43267:43272 Himp CHavoc
R43129:43131 SF_Equiv <> com ind
R43150:43153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43158:43161 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43162:43164 SF_Equiv <> com ind
R43154:43157 SF_Imp <> aexp ind
R43144:43149 Coq.Strings.String <> string ind
R43180:43183 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43187:43190 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43191:43193 SF_Equiv <> com ind
R43184:43186 SF_Equiv <> com ind
R43177:43179 SF_Equiv <> com ind
R43209:43212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43216:43219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43223:43226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43227:43229 SF_Equiv <> com ind
R43220:43222 SF_Equiv <> com ind
R43213:43215 SF_Equiv <> com ind
R43205:43208 SF_Imp <> bexp ind
R43248:43251 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43255:43258 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43259:43261 SF_Equiv <> com ind
R43252:43254 SF_Equiv <> com ind
R43244:43247 SF_Imp <> bexp ind
R43282:43285 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43286:43288 SF_Equiv <> com ind
R43276:43281 Coq.Strings.String <> string ind
R43346:43350 SF_Equiv Himp CSkip constr
not 43332:43332 Himp ::'SKIP'
R43380:43383 SF_Equiv Himp CAss constr
not 43362:43362 Himp ::x_'::='_x
R43431:43434 SF_Equiv Himp CSeq constr
not 43414:43414 Himp ::x_';;'_x
R43519:43524 SF_Equiv Himp CWhile constr
not 43488:43488 Himp ::'WHILE'_x_'DO'_x_'END'
R43618:43620 SF_Equiv Himp CIf constr
not 43576:43576 Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R43693:43698 SF_Equiv Himp CHavoc constr
not 43677:43677 Himp ::'HAVOC'_x
ind 44127:44131 Himp ceval
constr 44172:44177 Himp E_Skip
constr 44220:44224 Himp E_Ass
constr 44355:44359 Himp E_Seq
constr 44491:44498 Himp E_IfTrue
constr 44655:44663 Himp E_IfFalse
constr 44821:44832 Himp E_WhileFalse
constr 44951:44961 Himp E_WhileTrue
R44138:44141 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44147:44150 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44156:44159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44151:44155 SF_Imp <> state def
R44142:44146 SF_Imp <> state def
R44135:44137 SF_Equiv Himp com ind
R45207:45211 SF_Equiv <> ceval ind
R44193:44197 SF_Imp <> state def
R44204:44206 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44209:44212 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44200:44203 SF_Equiv Himp ::'SKIP' not
R44207:44208 SF_Equiv <> st var
R44213:44214 SF_Equiv <> st var
R44241:44245 SF_Imp <> state def
R44254:44257 SF_Imp <> aexp ind
R44265:44267 Coq.Init.Datatypes <> nat ind
R44275:44280 Coq.Strings.String <> string ind
R44305:44314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44315:44315 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44324:44327 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44330:44333 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44317:44321 SF_Equiv Himp ::x_'::='_x not
R44316:44316 SF_Equiv <> X var
R44322:44323 SF_Equiv <> a1 var
R44328:44329 SF_Equiv <> st var
R44336:44340 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R44342:44346 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R44348:44349 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R44334:44335 SF_Equiv <> st var
R44341:44341 SF_Equiv <> X var
R44347:44347 SF_Equiv <> n var
R44301:44303 Coq.Init.Logic <> :type_scope:x_'='_x not
R44290:44294 SF_Imp <> aeval def
R44299:44300 SF_Equiv <> a1 var
R44296:44297 SF_Equiv <> st var
R44304:44304 SF_Equiv <> n var
R44379:44381 SF_Equiv Himp com ind
R44399:44403 SF_Imp <> state def
R44427:44436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44453:44462 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44463:44463 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44472:44475 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44478:44481 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44466:44469 SF_Equiv Himp ::x_';;'_x not
R44464:44465 SF_Equiv <> c1 var
R44470:44471 SF_Equiv <> c2 var
R44476:44477 SF_Equiv <> st var
R44482:44485 SF_Equiv <> st'' var
R44439:44441 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44445:44448 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44437:44438 SF_Equiv <> c2 var
R44442:44444 SF_Equiv <> st' var
R44449:44452 SF_Equiv <> st'' var
R44415:44417 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44420:44423 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44413:44414 SF_Equiv <> c1 var
R44418:44419 SF_Equiv <> st var
R44424:44426 SF_Equiv <> st' var
R44519:44523 SF_Imp <> state def
R44532:44535 SF_Imp <> bexp ind
R44547:44549 SF_Equiv Himp com ind
R44577:44586 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44601:44610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44611:44611 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44637:44640 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44643:44646 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44612:44615 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44618:44623 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44626:44631 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44634:44636 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44616:44617 SF_Equiv <> b1 var
R44624:44625 SF_Equiv <> c1 var
R44632:44633 SF_Equiv <> c2 var
R44641:44642 SF_Equiv <> st var
R44647:44649 SF_Equiv <> st' var
R44589:44591 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44594:44597 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44587:44588 SF_Equiv <> c1 var
R44592:44593 SF_Equiv <> st var
R44598:44600 SF_Equiv <> st' var
R44570:44572 Coq.Init.Logic <> :type_scope:x_'='_x not
R44559:44563 SF_Imp <> beval def
R44568:44569 SF_Equiv <> b1 var
R44565:44566 SF_Equiv <> st var
R44573:44576 Coq.Init.Datatypes <> true constr
R44684:44688 SF_Imp <> state def
R44697:44700 SF_Imp <> bexp ind
R44712:44714 SF_Equiv Himp com ind
R44743:44752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44767:44776 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44777:44777 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44803:44806 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44809:44812 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44778:44781 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44784:44789 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44792:44797 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44800:44802 SF_Equiv Himp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R44782:44783 SF_Equiv <> b1 var
R44790:44791 SF_Equiv <> c1 var
R44798:44799 SF_Equiv <> c2 var
R44807:44808 SF_Equiv <> st var
R44813:44815 SF_Equiv <> st' var
R44755:44757 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44760:44763 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44753:44754 SF_Equiv <> c2 var
R44758:44759 SF_Equiv <> st var
R44764:44766 SF_Equiv <> st' var
R44735:44737 Coq.Init.Logic <> :type_scope:x_'='_x not
R44724:44728 SF_Imp <> beval def
R44733:44734 SF_Equiv <> b1 var
R44730:44731 SF_Equiv <> st var
R44738:44742 Coq.Init.Datatypes <> false constr
R44849:44852 SF_Imp <> bexp ind
R44861:44865 SF_Imp <> state def
R44874:44876 SF_Equiv Himp com ind
R44905:44914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44915:44915 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44934:44937 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44940:44943 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R44916:44921 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44924:44927 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44930:44933 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R44922:44923 SF_Equiv <> b1 var
R44928:44929 SF_Equiv <> c1 var
R44938:44939 SF_Equiv <> st var
R44944:44945 SF_Equiv <> st var
R44897:44899 Coq.Init.Logic <> :type_scope:x_'='_x not
R44886:44890 SF_Imp <> beval def
R44895:44896 SF_Equiv <> b1 var
R44892:44893 SF_Equiv <> st var
R44900:44904 Coq.Init.Datatypes <> false constr
R44987:44991 SF_Imp <> state def
R45000:45003 SF_Imp <> bexp ind
R45012:45014 SF_Equiv Himp com ind
R45042:45051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45066:45075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45110:45119 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45120:45120 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45139:45142 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45145:45148 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45121:45126 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45129:45132 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45135:45138 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45127:45128 SF_Equiv <> b1 var
R45133:45134 SF_Equiv <> c1 var
R45143:45144 SF_Equiv <> st var
R45149:45152 SF_Equiv <> st'' var
R45076:45076 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45095:45098 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45102:45105 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45077:45082 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45085:45088 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45091:45094 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R45083:45084 SF_Equiv <> b1 var
R45089:45090 SF_Equiv <> c1 var
R45099:45101 SF_Equiv <> st' var
R45106:45109 SF_Equiv <> st'' var
R45054:45056 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45059:45062 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45052:45053 SF_Equiv <> c1 var
R45057:45058 SF_Equiv <> st var
R45063:45065 SF_Equiv <> st' var
R45035:45037 Coq.Init.Logic <> :type_scope:x_'='_x not
R45024:45028 SF_Imp <> beval def
R45033:45034 SF_Equiv <> b1 var
R45030:45031 SF_Equiv <> st var
R45038:45041 Coq.Init.Datatypes <> true constr
R45207:45211 SF_Equiv Himp ceval ind
not 45182:45182 Himp ::x_'/'_x_'\\'_x
def 45326:45339 Himp havoc_example1
R45343:45343 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45351:45354 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45364:45367 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45344:45349 SF_Equiv Himp ::'HAVOC'_x not
R45350:45350 SF_Imp <> X def
R45355:45360 SF_Maps <> ::'{'_'-->'_x_'}' not
R45362:45363 SF_Maps <> ::'{'_'-->'_x_'}' not
R45368:45369 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R45371:45375 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R45377:45378 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R45370:45370 SF_Imp <> X def
def 45426:45439 Himp havoc_example2
R45445:45445 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45460:45463 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45473:45476 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45450:45452 SF_Equiv Himp ::x_';;'_x not
R45446:45449 SF_Equiv Himp ::'SKIP' not
R45453:45458 SF_Equiv Himp ::'HAVOC'_x not
R45459:45459 SF_Imp <> Z def
R45464:45469 SF_Maps <> ::'{'_'-->'_x_'}' not
R45471:45472 SF_Maps <> ::'{'_'-->'_x_'}' not
R45477:45478 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R45480:45484 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R45487:45488 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R45479:45479 SF_Imp <> Z def
def 45626:45631 Himp cequiv
R45642:45644 SF_Equiv Himp com ind
R45673:45677 SF_Imp <> state def
R45696:45700 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45684:45686 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45689:45692 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45682:45683 SF_Equiv <> c1 var
R45687:45688 SF_Equiv <> st var
R45693:45695 SF_Equiv <> st' var
R45703:45705 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45708:45711 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R45701:45702 SF_Equiv <> c2 var
R45706:45707 SF_Equiv <> st var
R45712:45714 SF_Equiv <> st' var
def 45931:45933 Himp pXY
R45947:45949 SF_Equiv Himp ::x_';;'_x not
R45940:45945 SF_Equiv Himp ::'HAVOC'_x not
R45946:45946 SF_Imp <> X def
R45950:45955 SF_Equiv Himp ::'HAVOC'_x not
R45956:45956 SF_Imp <> Y def
def 45971:45973 Himp pYX
R45987:45989 SF_Equiv Himp ::x_';;'_x not
R45980:45985 SF_Equiv Himp ::'HAVOC'_x not
R45986:45986 SF_Imp <> Y def
R45990:45995 SF_Equiv Himp ::'HAVOC'_x not
R45996:45996 SF_Imp <> X def
prf 46104:46117 Himp pXY_cequiv_pYX
R46137:46140 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46123:46128 SF_Equiv Himp cequiv def
R46134:46136 SF_Equiv Himp pYX def
R46130:46132 SF_Equiv Himp pXY def
R46141:46141 Coq.Init.Logic <> :type_scope:'~'_x not
R46142:46147 SF_Equiv Himp cequiv def
R46153:46155 SF_Equiv Himp pYX def
R46149:46151 SF_Equiv Himp pXY def
def 46321:46326 Himp ptwice
R46340:46342 SF_Equiv Himp ::x_';;'_x not
R46333:46338 SF_Equiv Himp ::'HAVOC'_x not
R46339:46339 SF_Imp <> X def
R46343:46348 SF_Equiv Himp ::'HAVOC'_x not
R46349:46349 SF_Imp <> Y def
def 46364:46368 Himp pcopy
R46382:46384 SF_Equiv Himp ::x_';;'_x not
R46375:46380 SF_Equiv Himp ::'HAVOC'_x not
R46381:46381 SF_Imp <> X def
R46386:46390 SF_Equiv Himp ::x_'::='_x not
R46385:46385 SF_Imp <> Y def
R46391:46391 SF_Imp <> X def
prf 46562:46580 Himp ptwice_cequiv_pcopy
R46605:46608 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R46586:46591 SF_Equiv Himp cequiv def
R46600:46604 SF_Equiv Himp pcopy def
R46593:46598 SF_Equiv Himp ptwice def
R46609:46609 Coq.Init.Logic <> :type_scope:'~'_x not
R46610:46615 SF_Equiv Himp cequiv def
R46624:46628 SF_Equiv Himp pcopy def
R46617:46622 SF_Equiv Himp ptwice def
def 47331:47332 Himp p1
R47336:47338 SF_Equiv Himp com ind
R47345:47350 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47360:47367 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47393:47398 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47351:47353 SF_Imp <> :bexp_scope:'!'_x not
R47359:47359 SF_Imp <> :bexp_scope:'!'_x not
R47355:47357 SF_Imp <> :bexp_scope:x_'='_x not
R47354:47354 SF_Imp <> X def
R47375:47381 SF_Equiv Himp ::x_';;'_x not
R47368:47373 SF_Equiv Himp ::'HAVOC'_x not
R47374:47374 SF_Imp <> Y def
R47383:47387 SF_Equiv Himp ::x_'::='_x not
R47382:47382 SF_Imp <> X def
R47389:47391 SF_Imp <> :aexp_scope:x_'+'_x not
R47388:47388 SF_Imp <> X def
def 47413:47414 Himp p2
R47418:47420 SF_Equiv Himp com ind
R47427:47432 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47442:47449 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47454:47459 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R47433:47435 SF_Imp <> :bexp_scope:'!'_x not
R47441:47441 SF_Imp <> :bexp_scope:'!'_x not
R47437:47439 SF_Imp <> :bexp_scope:x_'='_x not
R47436:47436 SF_Imp <> X def
R47450:47453 SF_Equiv Himp ::'SKIP' not
prf 47721:47734 Himp p1_may_diverge
R47762:47767 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47768:47769 Coq.Init.Logic <> :type_scope:'~'_x not
R47772:47774 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R47777:47780 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R47770:47771 SF_Equiv Himp p1 def
R47775:47776 SF_Equiv <> st var
R47781:47783 SF_Equiv <> st' var
R47757:47760 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47753:47754 SF_Equiv <> st var
R47756:47756 SF_Imp <> X def
prf 47829:47842 Himp p2_may_diverge
R47870:47875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47876:47877 Coq.Init.Logic <> :type_scope:'~'_x not
R47880:47882 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R47885:47888 SF_Equiv Himp ::x_'/'_x_'\\'_x not
R47878:47879 SF_Equiv Himp p2 def
R47883:47884 SF_Equiv <> st var
R47889:47891 SF_Equiv <> st' var
R47865:47868 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R47861:47862 SF_Equiv <> st var
R47864:47864 SF_Imp <> X def
prf 48090:48100 Himp p1_p2_equiv
R48104:48109 SF_Equiv Himp cequiv def
R48114:48115 SF_Equiv Himp p2 def
R48111:48112 SF_Equiv Himp p1 def
def 48386:48387 Himp p3
R48391:48393 SF_Equiv Himp com ind
R48407:48411 SF_Equiv Himp ::x_';;'_x not
R48401:48405 SF_Equiv Himp ::x_'::='_x not
R48400:48400 SF_Imp <> Z def
R48412:48417 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48427:48434 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48456:48461 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R48418:48420 SF_Imp <> :bexp_scope:'!'_x not
R48426:48426 SF_Imp <> :bexp_scope:'!'_x not
R48422:48424 SF_Imp <> :bexp_scope:x_'='_x not
R48421:48421 SF_Imp <> X def
R48442:48448 SF_Equiv Himp ::x_';;'_x not
R48435:48440 SF_Equiv Himp ::'HAVOC'_x not
R48441:48441 SF_Imp <> X def
R48449:48454 SF_Equiv Himp ::'HAVOC'_x not
R48455:48455 SF_Imp <> Z def
def 48476:48477 Himp p4
R48481:48483 SF_Equiv Himp com ind
R48497:48501 SF_Equiv Himp ::x_';;'_x not
R48491:48495 SF_Equiv Himp ::x_'::='_x not
R48490:48490 SF_Imp <> X def
R48503:48507 SF_Equiv Himp ::x_'::='_x not
R48502:48502 SF_Imp <> Z def
prf 48521:48533 Himp p3_p4_inequiv
R48537:48538 Coq.Init.Logic <> :type_scope:'~'_x not
R48539:48544 SF_Equiv Himp cequiv def
R48549:48550 SF_Equiv Himp p4 def
R48546:48547 SF_Equiv Himp p3 def
def 49158:49159 Himp p5
R49163:49165 SF_Equiv Himp com ind
R49172:49177 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49187:49194 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49202:49207 SF_Equiv Himp ::'WHILE'_x_'DO'_x_'END' not
R49178:49180 SF_Imp <> :bexp_scope:'!'_x not
R49186:49186 SF_Imp <> :bexp_scope:'!'_x not
R49182:49184 SF_Imp <> :bexp_scope:x_'='_x not
R49181:49181 SF_Imp <> X def
R49195:49200 SF_Equiv Himp ::'HAVOC'_x not
R49201:49201 SF_Imp <> X def
def 49222:49223 Himp p6
R49227:49229 SF_Equiv Himp com ind
R49237:49241 SF_Equiv Himp ::x_'::='_x not
R49236:49236 SF_Imp <> X def
prf 49255:49265 Himp p5_p6_equiv
R49269:49274 SF_Equiv Himp cequiv def
R49279:49280 SF_Equiv Himp p6 def
R49276:49277 SF_Equiv Himp p5 def
R49334:49337 SF_Equiv Himp <> mod
prf 50030:50060 <> swap_noninterfering_assignments
R50093:50098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50125:50130 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50157:50162 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50163:50168 SF_Equiv <> cequiv def
R50212:50214 SF_Imp <> :com_scope:x_';;'_x not
R50205:50209 SF_Imp <> :com_scope:x_'::='_x not
R50203:50204 SF_Equiv <> l2 var
R50210:50211 SF_Equiv <> a2 var
R50217:50221 SF_Imp <> :com_scope:x_'::='_x not
R50215:50216 SF_Equiv <> l1 var
R50222:50223 SF_Equiv <> a1 var
R50184:50186 SF_Imp <> :com_scope:x_';;'_x not
R50177:50181 SF_Imp <> :com_scope:x_'::='_x not
R50175:50176 SF_Equiv <> l1 var
R50182:50183 SF_Equiv <> a1 var
R50189:50193 SF_Imp <> :com_scope:x_'::='_x not
R50187:50188 SF_Equiv <> l2 var
R50194:50195 SF_Equiv <> a2 var
R50131:50150 SF_Equiv <> var_not_used_in_aexp ind
R50155:50156 SF_Equiv <> a1 var
R50152:50153 SF_Equiv <> l2 var
R50099:50118 SF_Equiv <> var_not_used_in_aexp ind
R50123:50124 SF_Equiv <> a2 var
R50120:50121 SF_Equiv <> l1 var
R50087:50090 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R50085:50086 SF_Equiv <> l1 var
R50091:50092 SF_Equiv <> l2 var
def 50711:50717 <> capprox
R50728:50730 SF_Imp <> com ind
R50760:50764 SF_Imp <> state def
R50784:50787 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50790:50792 SF_Imp <> ::x_'/'_x_'\\'_x not
R50795:50798 SF_Imp <> ::x_'/'_x_'\\'_x not
R50788:50789 SF_Equiv <> c2 var
R50793:50794 SF_Equiv <> st var
R50799:50801 SF_Equiv <> st' var
R50772:50774 SF_Imp <> ::x_'/'_x_'\\'_x not
R50777:50780 SF_Imp <> ::x_'/'_x_'\\'_x not
R50770:50771 SF_Equiv <> c1 var
R50775:50776 SF_Equiv <> st var
R50781:50783 SF_Equiv <> st' var
def 51200:51201 <> c3
R51205:51207 SF_Imp <> com ind
def 51285:51286 <> c4
R51290:51292 SF_Imp <> com ind
prf 51368:51382 <> c3_c4_different
R51401:51404 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R51386:51387 Coq.Init.Logic <> :type_scope:'~'_x not
R51388:51394 SF_Equiv <> capprox def
R51399:51400 SF_Equiv <> c4 prfax
R51396:51397 SF_Equiv <> c3 prfax
R51405:51406 Coq.Init.Logic <> :type_scope:'~'_x not
R51407:51413 SF_Equiv <> capprox def
R51418:51419 SF_Equiv <> c3 prfax
R51415:51416 SF_Equiv <> c4 prfax
def 51539:51542 <> cmin
R51546:51548 SF_Imp <> com ind
prf 51626:51637 <> cmin_minimal
R51651:51657 SF_Equiv <> capprox def
R51664:51664 SF_Equiv <> c var
R51659:51662 SF_Equiv <> cmin prfax
def 51841:51845 <> zprop
R51852:51854 SF_Imp <> com ind
prf 51940:51955 <> zprop_preserving
R51981:51984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51997:52000 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52001:52005 SF_Equiv <> zprop prfax
R52007:52008 SF_Equiv <> c' var
R51985:51991 SF_Equiv <> capprox def
R51995:51996 SF_Equiv <> c' var
R51993:51993 SF_Equiv <> c var
R51974:51978 SF_Equiv <> zprop prfax
R51980:51980 SF_Equiv <> c var
