DIGEST 894a8114eb4b1a59a09f478731cb578d
FSF_Imp
R904:916 Coq.Bool.Bool <> <> lib
R934:948 Coq.Arith.Arith <> <> lib
R966:980 Coq.Arith.EqNat <> <> lib
R998:1012 Coq.omega.Omega <> <> lib
R1030:1043 Coq.Lists.List <> <> lib
R1061:1075 Coq.omega.Omega <> <> lib
R1116:1122 SF_Maps <> <> lib
mod 1608:1611 <> AExp
ind 1728:1731 AExp aexp
constr 1747:1750 AExp ANum
constr 1770:1774 AExp APlus
constr 1803:1808 AExp AMinus
constr 1837:1841 AExp AMult
R1757:1760 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1761:1764 SF_Imp <> aexp ind
R1754:1756 Coq.Init.Datatypes <> nat ind
R1782:1785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1790:1793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1794:1797 SF_Imp <> aexp ind
R1786:1789 SF_Imp <> aexp ind
R1778:1781 SF_Imp <> aexp ind
R1816:1819 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1824:1827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1828:1831 SF_Imp <> aexp ind
R1820:1823 SF_Imp <> aexp ind
R1812:1815 SF_Imp <> aexp ind
R1849:1852 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1857:1860 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1861:1864 SF_Imp <> aexp ind
R1853:1856 SF_Imp <> aexp ind
R1845:1848 SF_Imp <> aexp ind
ind 1878:1881 AExp bexp
constr 1897:1901 AExp BTrue
constr 1914:1919 AExp BFalse
constr 1932:1934 AExp BEq
constr 1963:1965 AExp BLe
constr 1994:1997 AExp BNot
constr 2018:2021 AExp BAnd
R1905:1908 SF_Imp <> bexp ind
R1923:1926 SF_Imp <> bexp ind
R1942:1945 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1950:1953 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1954:1957 SF_Imp <> bexp ind
R1946:1949 SF_Imp AExp aexp ind
R1938:1941 SF_Imp AExp aexp ind
R1973:1976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1981:1984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1985:1988 SF_Imp <> bexp ind
R1977:1980 SF_Imp AExp aexp ind
R1969:1972 SF_Imp AExp aexp ind
R2005:2008 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2009:2012 SF_Imp <> bexp ind
R2001:2004 SF_Imp <> bexp ind
R2029:2032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2037:2040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2041:2044 SF_Imp <> bexp ind
R2033:2036 SF_Imp <> bexp ind
R2025:2028 SF_Imp <> bexp ind
def 4718:4722 AExp aeval
R4729:4732 SF_Imp AExp aexp ind
R4737:4739 Coq.Init.Datatypes <> nat ind
R4752:4752 SF_Imp <> a var
R4763:4766 SF_Imp AExp ANum constr
R4779:4783 SF_Imp AExp APlus constr
R4794:4794 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4803:4807 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4816:4816 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4795:4799 SF_Imp <> aeval def
R4808:4812 SF_Imp <> aeval def
R4822:4827 SF_Imp AExp AMinus constr
R4839:4839 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4848:4852 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4861:4861 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4840:4844 SF_Imp <> aeval def
R4853:4857 SF_Imp <> aeval def
R4867:4871 SF_Imp AExp AMult constr
R4882:4882 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4891:4895 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4904:4904 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4883:4887 SF_Imp <> aeval def
R4896:4900 SF_Imp <> aeval def
def 4922:4932 AExp test_aeval1
R4968:4970 Coq.Init.Logic <> :type_scope:x_'='_x not
R4937:4941 SF_Imp AExp aeval def
R4944:4948 SF_Imp AExp APlus constr
R4960:4963 SF_Imp AExp ANum constr
R4951:4954 SF_Imp AExp ANum constr
def 5078:5082 AExp beval
R5089:5092 SF_Imp AExp bexp ind
R5097:5100 Coq.Init.Datatypes <> bool ind
R5113:5113 SF_Imp <> b var
R5124:5128 SF_Imp AExp BTrue constr
R5139:5142 Coq.Init.Datatypes <> true constr
R5148:5153 SF_Imp AExp BFalse constr
R5163:5167 Coq.Init.Datatypes <> false constr
R5173:5175 SF_Imp AExp BEq constr
R5188:5194 Coq.Arith.EqNat <> beq_nat syndef
R5208:5212 SF_Imp AExp aeval def
R5197:5201 SF_Imp AExp aeval def
R5222:5224 SF_Imp AExp BLe constr
R5237:5239 Coq.Arith.Compare_dec <> leb syndef
R5253:5257 SF_Imp AExp aeval def
R5242:5246 SF_Imp AExp aeval def
R5267:5270 SF_Imp AExp BNot constr
R5282:5285 Coq.Init.Datatypes <> negb def
R5288:5292 SF_Imp <> beval def
R5302:5305 SF_Imp AExp BAnd constr
R5317:5320 Coq.Init.Datatypes <> andb def
R5334:5338 SF_Imp <> beval def
R5323:5327 SF_Imp <> beval def
def 5747:5760 AExp optimize_0plus
R5765:5768 SF_Imp AExp aexp ind
R5773:5776 SF_Imp AExp aexp ind
R5789:5789 SF_Imp <> a var
R5800:5803 SF_Imp AExp ANum constr
R5816:5819 SF_Imp AExp ANum constr
R5827:5831 SF_Imp AExp APlus constr
R5834:5837 SF_Imp AExp ANum constr
R5854:5867 SF_Imp <> optimize_0plus def
R5876:5880 SF_Imp AExp APlus constr
R5897:5901 SF_Imp AExp APlus constr
R5924:5937 SF_Imp <> optimize_0plus def
R5904:5917 SF_Imp <> optimize_0plus def
R5947:5952 SF_Imp AExp AMinus constr
R5969:5974 SF_Imp AExp AMinus constr
R5997:6010 SF_Imp <> optimize_0plus def
R5977:5990 SF_Imp <> optimize_0plus def
R6020:6024 SF_Imp AExp AMult constr
R6041:6045 SF_Imp AExp AMult constr
R6068:6081 SF_Imp <> optimize_0plus def
R6048:6061 SF_Imp <> optimize_0plus def
def 6234:6252 AExp test_optimize_0plus
R6386:6390 Coq.Init.Logic <> :type_scope:x_'='_x not
R6257:6270 SF_Imp AExp optimize_0plus def
R6273:6277 SF_Imp AExp APlus constr
R6313:6317 SF_Imp AExp APlus constr
R6360:6364 SF_Imp AExp APlus constr
R6376:6379 SF_Imp AExp ANum constr
R6367:6370 SF_Imp AExp ANum constr
R6320:6323 SF_Imp AExp ANum constr
R6280:6283 SF_Imp AExp ANum constr
R6391:6395 SF_Imp AExp APlus constr
R6407:6410 SF_Imp AExp ANum constr
R6398:6401 SF_Imp AExp ANum constr
prf 6630:6649 AExp optimize_0plus_sound
R6688:6690 Coq.Init.Logic <> :type_scope:x_'='_x not
R6664:6668 SF_Imp AExp aeval def
R6671:6684 SF_Imp AExp optimize_0plus def
R6686:6686 SF_Imp <> a var
R6691:6695 SF_Imp AExp aeval def
R6697:6697 SF_Imp <> a var
prf 8822:8827 AExp silly1
R8850:8852 Coq.Init.Logic <> :type_scope:x_'='_x not
R8842:8846 SF_Imp AExp aeval def
R8848:8849 SF_Imp <> ae var
R8853:8857 SF_Imp AExp aeval def
R8859:8860 SF_Imp <> ae var
prf 8936:8941 AExp silly2
R8965:8968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8969:8969 SF_Imp <> P var
R8964:8964 SF_Imp <> P var
prf 9708:9710 AExp foo
R9731:9733 Coq.Init.Logic <> :type_scope:x_'='_x not
R9724:9726 Coq.Arith.Compare_dec <> leb syndef
R9730:9730 SF_Imp <> n var
R9734:9737 Coq.Init.Datatypes <> true constr
prf 9984:9987 AExp foo'
R10008:10010 Coq.Init.Logic <> :type_scope:x_'='_x not
R10001:10003 Coq.Arith.Compare_dec <> leb syndef
R10007:10007 SF_Imp <> n var
R10011:10014 Coq.Init.Datatypes <> true constr
prf 10351:10371 AExp optimize_0plus_sound'
R10410:10412 Coq.Init.Logic <> :type_scope:x_'='_x not
R10386:10390 SF_Imp AExp aeval def
R10393:10406 SF_Imp AExp optimize_0plus def
R10408:10408 SF_Imp <> a var
R10413:10417 SF_Imp AExp aeval def
R10419:10419 SF_Imp <> a var
prf 13237:13258 AExp optimize_0plus_sound''
R13297:13299 Coq.Init.Logic <> :type_scope:x_'='_x not
R13273:13277 SF_Imp AExp aeval def
R13280:13293 SF_Imp AExp optimize_0plus def
R13295:13295 SF_Imp <> a var
R13300:13304 SF_Imp AExp aeval def
R13306:13306 SF_Imp <> a var
prf 14667:14670 AExp In10
R14674:14675 Coq.Lists.List <> In def
R14680:14680 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14682:14682 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14684:14684 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14686:14686 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14688:14688 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14690:14690 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14692:14692 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14694:14694 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14696:14696 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14698:14698 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14701:14701 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 14966:14970 AExp In10'
R14974:14975 Coq.Lists.List <> In def
R14980:14980 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14982:14982 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14984:14984 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14986:14986 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14988:14988 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14990:14990 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14992:14992 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14994:14994 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14996:14996 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14998:14998 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15001:15001 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 16199:16214 AExp optimize_0plus_b
R16221:16224 SF_Imp AExp bexp ind
R16229:16232 SF_Imp AExp bexp ind
prf 16310:16331 AExp optimize_0plus_b_sound
R16373:16375 Coq.Init.Logic <> :type_scope:x_'='_x not
R16347:16351 SF_Imp AExp beval def
R16354:16369 SF_Imp AExp optimize_0plus_b prfax
R16371:16371 SF_Imp <> b var
R16376:16380 SF_Imp AExp beval def
R16382:16382 SF_Imp <> b var
def 19368:19391 AExp silly_presburger_example
R19444:19449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19451:19454 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19450:19450 SF_Imp <> m var
R19455:19455 SF_Imp <> p var
R19427:19430 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19418:19421 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19414:19416 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19413:19413 SF_Imp <> m var
R19417:19417 SF_Imp <> n var
R19423:19425 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19422:19422 SF_Imp <> n var
R19426:19426 SF_Imp <> o var
R19436:19438 Coq.Init.Logic <> :type_scope:x_'='_x not
R19432:19434 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19431:19431 SF_Imp <> o var
R19440:19442 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19439:19439 SF_Imp <> p var
mod 21360:21375 <> AExp.aevalR_first_try
ind 21389:21394 AExp.aevalR_first_try aevalR
constr 21425:21430 AExp.aevalR_first_try E_ANum
constr 21480:21486 AExp.aevalR_first_try E_APlus
constr 21610:21617 AExp.aevalR_first_try E_AMinus
constr 21741:21747 AExp.aevalR_first_try E_AMult
R21402:21405 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21409:21412 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21406:21408 Coq.Init.Datatypes <> nat ind
R21398:21401 SF_Imp AExp aexp ind
R21446:21448 Coq.Init.Datatypes <> nat ind
R21458:21463 SF_Imp <> aevalR ind
R21474:21474 SF_Imp <> n var
R21466:21469 SF_Imp AExp ANum constr
R21471:21471 SF_Imp <> n var
R21505:21508 SF_Imp AExp aexp ind
R21519:21521 Coq.Init.Datatypes <> nat ind
R21543:21552 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21565:21574 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21575:21580 SF_Imp <> aevalR ind
R21599:21601 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21597:21598 SF_Imp <> n1 var
R21602:21603 SF_Imp <> n2 var
R21583:21587 SF_Imp AExp APlus constr
R21592:21593 SF_Imp <> e2 var
R21589:21590 SF_Imp <> e1 var
R21553:21558 SF_Imp <> aevalR ind
R21563:21564 SF_Imp <> n2 var
R21560:21561 SF_Imp <> e2 var
R21531:21536 SF_Imp <> aevalR ind
R21541:21542 SF_Imp <> n1 var
R21538:21539 SF_Imp <> e1 var
R21635:21638 SF_Imp AExp aexp ind
R21649:21651 Coq.Init.Datatypes <> nat ind
R21673:21682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21695:21704 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21705:21710 SF_Imp <> aevalR ind
R21730:21732 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R21728:21729 SF_Imp <> n1 var
R21733:21734 SF_Imp <> n2 var
R21713:21718 SF_Imp AExp AMinus constr
R21723:21724 SF_Imp <> e2 var
R21720:21721 SF_Imp <> e1 var
R21683:21688 SF_Imp <> aevalR ind
R21693:21694 SF_Imp <> n2 var
R21690:21691 SF_Imp <> e2 var
R21661:21666 SF_Imp <> aevalR ind
R21671:21672 SF_Imp <> n1 var
R21668:21669 SF_Imp <> e1 var
R21766:21769 SF_Imp AExp aexp ind
R21780:21782 Coq.Init.Datatypes <> nat ind
R21804:21813 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21826:21835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21836:21841 SF_Imp <> aevalR ind
R21860:21862 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R21858:21859 SF_Imp <> n1 var
R21863:21864 SF_Imp <> n2 var
R21844:21848 SF_Imp AExp AMult constr
R21853:21854 SF_Imp <> e2 var
R21850:21851 SF_Imp <> e1 var
R21814:21819 SF_Imp <> aevalR ind
R21824:21825 SF_Imp <> n2 var
R21821:21822 SF_Imp <> e2 var
R21792:21797 SF_Imp <> aevalR ind
R21802:21803 SF_Imp <> n1 var
R21799:21800 SF_Imp <> e1 var
R22065:22070 SF_Imp AExp.aevalR_first_try aevalR ind
not 22041:22041 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22151:22166 SF_Imp AExp.aevalR_first_try <> mod
ind 22697:22702 AExp aevalR
constr 22733:22738 AExp E_ANum
constr 22782:22788 AExp E_APlus
constr 22893:22900 AExp E_AMinus
constr 23006:23012 AExp E_AMult
R22710:22713 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22717:22720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22714:22716 Coq.Init.Datatypes <> nat ind
R22706:22709 SF_Imp AExp aexp ind
R23138:23143 SF_Imp <> aevalR ind
R22752:22754 Coq.Init.Datatypes <> nat ind
R22764:22764 SF_Imp AExp :type_scope:x_'\\'_x not
R22771:22775 SF_Imp AExp :type_scope:x_'\\'_x not
R22765:22768 SF_Imp AExp ANum constr
R22770:22770 SF_Imp <> n var
R22776:22776 SF_Imp <> n var
R22807:22810 SF_Imp AExp aexp ind
R22822:22824 Coq.Init.Datatypes <> nat ind
R22834:22834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22843:22847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22848:22848 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22857:22861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22862:22862 SF_Imp AExp :type_scope:x_'\\'_x not
R22874:22879 SF_Imp AExp :type_scope:x_'\\'_x not
R22887:22887 SF_Imp AExp :type_scope:x_'\\'_x not
R22863:22867 SF_Imp AExp APlus constr
R22872:22873 SF_Imp <> e2 var
R22869:22870 SF_Imp <> e1 var
R22882:22884 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R22880:22881 SF_Imp <> n1 var
R22885:22886 SF_Imp <> n2 var
R22851:22854 SF_Imp AExp :type_scope:x_'\\'_x not
R22849:22850 SF_Imp <> e2 var
R22855:22856 SF_Imp <> n2 var
R22837:22840 SF_Imp AExp :type_scope:x_'\\'_x not
R22835:22836 SF_Imp <> e1 var
R22841:22842 SF_Imp <> n1 var
R22919:22922 SF_Imp AExp aexp ind
R22934:22936 Coq.Init.Datatypes <> nat ind
R22946:22946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22955:22959 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22960:22960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22969:22973 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22974:22974 SF_Imp AExp :type_scope:x_'\\'_x not
R22987:22992 SF_Imp AExp :type_scope:x_'\\'_x not
R23000:23000 SF_Imp AExp :type_scope:x_'\\'_x not
R22975:22980 SF_Imp AExp AMinus constr
R22985:22986 SF_Imp <> e2 var
R22982:22983 SF_Imp <> e1 var
R22995:22997 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R22993:22994 SF_Imp <> n1 var
R22998:22999 SF_Imp <> n2 var
R22963:22966 SF_Imp AExp :type_scope:x_'\\'_x not
R22961:22962 SF_Imp <> e2 var
R22967:22968 SF_Imp <> n2 var
R22949:22952 SF_Imp AExp :type_scope:x_'\\'_x not
R22947:22948 SF_Imp <> e1 var
R22953:22954 SF_Imp <> n1 var
R23032:23035 SF_Imp AExp aexp ind
R23047:23049 Coq.Init.Datatypes <> nat ind
R23059:23059 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23068:23072 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23073:23073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23082:23086 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23087:23087 SF_Imp AExp :type_scope:x_'\\'_x not
R23099:23104 SF_Imp AExp :type_scope:x_'\\'_x not
R23112:23112 SF_Imp AExp :type_scope:x_'\\'_x not
R23088:23092 SF_Imp AExp AMult constr
R23097:23098 SF_Imp <> e2 var
R23094:23095 SF_Imp <> e1 var
R23107:23109 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23105:23106 SF_Imp <> n1 var
R23110:23111 SF_Imp <> n2 var
R23076:23079 SF_Imp AExp :type_scope:x_'\\'_x not
R23074:23075 SF_Imp <> e2 var
R23080:23081 SF_Imp <> n2 var
R23062:23065 SF_Imp AExp :type_scope:x_'\\'_x not
R23060:23061 SF_Imp <> e1 var
R23066:23067 SF_Imp <> n1 var
R23138:23143 SF_Imp AExp aevalR ind
not 23123:23123 AExp :type_scope:x_'\\'_x
prf 26015:26030 AExp aeval_iff_aevalR
R26048:26048 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26055:26060 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26050:26053 SF_Imp AExp :type_scope:x_'\\'_x not
R26049:26049 SF_Imp <> a var
R26054:26054 SF_Imp <> n var
R26068:26070 Coq.Init.Logic <> :type_scope:x_'='_x not
R26061:26065 SF_Imp AExp aeval def
R26067:26067 SF_Imp <> a var
R26071:26071 SF_Imp <> n var
R26515:26520 SF_Imp AExp E_ANum constr
R26515:26520 SF_Imp AExp E_ANum constr
R26551:26557 SF_Imp AExp E_APlus constr
R26551:26557 SF_Imp AExp E_APlus constr
R26651:26658 SF_Imp AExp E_AMinus constr
R26651:26658 SF_Imp AExp E_AMinus constr
R26751:26757 SF_Imp AExp E_AMult constr
R26751:26757 SF_Imp AExp E_AMult constr
prf 26923:26939 AExp aeval_iff_aevalR'
R26957:26957 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26964:26969 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26959:26962 SF_Imp AExp :type_scope:x_'\\'_x not
R26958:26958 SF_Imp <> a var
R26963:26963 SF_Imp <> n var
R26977:26979 Coq.Init.Logic <> :type_scope:x_'='_x not
R26970:26974 SF_Imp AExp aeval def
R26976:26976 SF_Imp <> a var
R26980:26980 SF_Imp <> n var
ind 27396:27401 AExp bevalR
R27408:27411 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27416:27419 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27412:27415 Coq.Init.Datatypes <> bool ind
R27404:27407 SF_Imp AExp bexp ind
prf 27456:27471 AExp beval_iff_bevalR
R27501:27505 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27490:27495 SF_Imp AExp bevalR ind
R27499:27500 SF_Imp <> bv var
R27497:27497 SF_Imp <> b var
R27513:27515 Coq.Init.Logic <> :type_scope:x_'='_x not
R27506:27510 SF_Imp AExp beval def
R27512:27512 SF_Imp <> b var
R27516:27517 SF_Imp <> bv var
R27573:27576 SF_Imp AExp <> mod
mod 28039:28053 <> aevalR_division
ind 28192:28195 aevalR_division aexp
constr 28211:28214 aevalR_division ANum
constr 28234:28238 aevalR_division APlus
constr 28267:28272 aevalR_division AMinus
constr 28301:28305 aevalR_division AMult
constr 28334:28337 aevalR_division ADiv
R28221:28224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28225:28228 SF_Imp <> aexp ind
R28218:28220 Coq.Init.Datatypes <> nat ind
R28246:28249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28254:28257 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28258:28261 SF_Imp <> aexp ind
R28250:28253 SF_Imp <> aexp ind
R28242:28245 SF_Imp <> aexp ind
R28280:28283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28288:28291 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28292:28295 SF_Imp <> aexp ind
R28284:28287 SF_Imp <> aexp ind
R28276:28279 SF_Imp <> aexp ind
R28313:28316 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28321:28324 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28325:28328 SF_Imp <> aexp ind
R28317:28320 SF_Imp <> aexp ind
R28309:28312 SF_Imp <> aexp ind
R28345:28348 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28353:28356 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28357:28360 SF_Imp <> aexp ind
R28349:28352 SF_Imp <> aexp ind
R28341:28344 SF_Imp <> aexp ind
ind 28700:28705 aevalR_division aevalR
constr 28736:28741 aevalR_division E_ANum
constr 28785:28791 aevalR_division E_APlus
constr 28896:28903 aevalR_division E_AMinus
constr 29009:29015 aevalR_division E_AMult
constr 29121:29126 aevalR_division E_ADiv
R28713:28716 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28720:28723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28717:28719 Coq.Init.Datatypes <> nat ind
R28709:28712 SF_Imp aevalR_division aexp ind
R29283:29288 SF_Imp <> aevalR ind
R28755:28757 Coq.Init.Datatypes <> nat ind
R28767:28767 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28774:28778 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28768:28771 SF_Imp aevalR_division ANum constr
R28773:28773 SF_Imp <> n var
R28779:28779 SF_Imp <> n var
R28810:28813 SF_Imp aevalR_division aexp ind
R28825:28827 Coq.Init.Datatypes <> nat ind
R28837:28837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28846:28850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28851:28851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28860:28864 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28865:28865 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28877:28882 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28890:28890 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28866:28870 SF_Imp aevalR_division APlus constr
R28875:28876 SF_Imp <> a2 var
R28872:28873 SF_Imp <> a1 var
R28885:28887 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28883:28884 SF_Imp <> n1 var
R28888:28889 SF_Imp <> n2 var
R28854:28857 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28852:28853 SF_Imp <> a2 var
R28858:28859 SF_Imp <> n2 var
R28840:28843 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28838:28839 SF_Imp <> a1 var
R28844:28845 SF_Imp <> n1 var
R28922:28925 SF_Imp aevalR_division aexp ind
R28937:28939 Coq.Init.Datatypes <> nat ind
R28949:28949 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28958:28962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28963:28963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28972:28976 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28977:28977 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28990:28995 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29003:29003 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28978:28983 SF_Imp aevalR_division AMinus constr
R28988:28989 SF_Imp <> a2 var
R28985:28986 SF_Imp <> a1 var
R28998:29000 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R28996:28997 SF_Imp <> n1 var
R29001:29002 SF_Imp <> n2 var
R28966:28969 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28964:28965 SF_Imp <> a2 var
R28970:28971 SF_Imp <> n2 var
R28952:28955 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R28950:28951 SF_Imp <> a1 var
R28956:28957 SF_Imp <> n1 var
R29035:29038 SF_Imp aevalR_division aexp ind
R29050:29052 Coq.Init.Datatypes <> nat ind
R29062:29062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29071:29075 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29076:29076 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29085:29089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29090:29090 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29102:29107 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29115:29115 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29091:29095 SF_Imp aevalR_division AMult constr
R29100:29101 SF_Imp <> a2 var
R29097:29098 SF_Imp <> a1 var
R29110:29112 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R29108:29109 SF_Imp <> n1 var
R29113:29114 SF_Imp <> n2 var
R29079:29082 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29077:29078 SF_Imp <> a2 var
R29083:29084 SF_Imp <> n2 var
R29065:29068 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29063:29064 SF_Imp <> a1 var
R29069:29070 SF_Imp <> n1 var
R29146:29149 SF_Imp aevalR_division aexp ind
R29163:29165 Coq.Init.Datatypes <> nat ind
R29175:29175 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29184:29188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29189:29189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29198:29202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29203:29203 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29210:29220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29221:29221 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29237:29241 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29242:29242 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29253:29257 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29243:29246 SF_Imp aevalR_division ADiv constr
R29251:29252 SF_Imp <> a2 var
R29248:29249 SF_Imp <> a1 var
R29258:29259 SF_Imp <> n3 var
R29232:29234 Coq.Init.Logic <> :type_scope:x_'='_x not
R29222:29225 Coq.Init.Peano <> mult syndef
R29230:29231 SF_Imp <> n3 var
R29227:29228 SF_Imp <> n2 var
R29235:29236 SF_Imp <> n1 var
R29206:29208 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R29204:29205 SF_Imp <> n2 var
R29192:29195 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29190:29191 SF_Imp <> a2 var
R29196:29197 SF_Imp <> n2 var
R29178:29181 SF_Imp aevalR_division :type_scope:x_'\\'_x not
R29176:29177 SF_Imp <> a1 var
R29182:29183 SF_Imp <> n1 var
R29283:29288 SF_Imp aevalR_division aevalR ind
not 29268:29268 aevalR_division :type_scope:x_'\\'_x
R29314:29328 SF_Imp aevalR_division <> mod
mod 29339:29353 <> aevalR_extended
ind 29821:29824 aevalR_extended aexp
constr 29840:29843 aevalR_extended AAny
constr 29890:29893 aevalR_extended ANum
constr 29913:29917 aevalR_extended APlus
constr 29946:29951 aevalR_extended AMinus
constr 29980:29984 aevalR_extended AMult
R29848:29851 SF_Imp <> aexp ind
R29900:29903 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29904:29907 SF_Imp <> aexp ind
R29897:29899 Coq.Init.Datatypes <> nat ind
R29925:29928 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29933:29936 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29937:29940 SF_Imp <> aexp ind
R29929:29932 SF_Imp <> aexp ind
R29921:29924 SF_Imp <> aexp ind
R29959:29962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29967:29970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29971:29974 SF_Imp <> aexp ind
R29963:29966 SF_Imp <> aexp ind
R29955:29958 SF_Imp <> aexp ind
R29992:29995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30000:30003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30004:30007 SF_Imp <> aexp ind
R29996:29999 SF_Imp <> aexp ind
R29988:29991 SF_Imp <> aexp ind
ind 30203:30208 aevalR_extended aevalR
constr 30239:30243 aevalR_extended E_Any
constr 30314:30319 aevalR_extended E_ANum
constr 30363:30369 aevalR_extended E_APlus
constr 30474:30481 aevalR_extended E_AMinus
constr 30587:30593 aevalR_extended E_AMult
R30216:30219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30223:30226 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30220:30222 Coq.Init.Datatypes <> nat ind
R30212:30215 SF_Imp aevalR_extended aexp ind
R30717:30722 SF_Imp <> aevalR ind
R30257:30259 Coq.Init.Datatypes <> nat ind
R30273:30276 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30269:30272 SF_Imp aevalR_extended AAny constr
R30277:30277 SF_Imp <> n var
R30333:30335 Coq.Init.Datatypes <> nat ind
R30345:30345 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30352:30356 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30346:30349 SF_Imp aevalR_extended ANum constr
R30351:30351 SF_Imp <> n var
R30357:30357 SF_Imp <> n var
R30388:30391 SF_Imp aevalR_extended aexp ind
R30403:30405 Coq.Init.Datatypes <> nat ind
R30415:30415 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30424:30428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30429:30429 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30438:30442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30443:30443 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30455:30460 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30468:30468 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30444:30448 SF_Imp aevalR_extended APlus constr
R30453:30454 SF_Imp <> a2 var
R30450:30451 SF_Imp <> a1 var
R30463:30465 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30461:30462 SF_Imp <> n1 var
R30466:30467 SF_Imp <> n2 var
R30432:30435 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30430:30431 SF_Imp <> a2 var
R30436:30437 SF_Imp <> n2 var
R30418:30421 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30416:30417 SF_Imp <> a1 var
R30422:30423 SF_Imp <> n1 var
R30500:30503 SF_Imp aevalR_extended aexp ind
R30515:30517 Coq.Init.Datatypes <> nat ind
R30527:30527 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30536:30540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30541:30541 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30550:30554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30555:30555 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30568:30573 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30581:30581 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30556:30561 SF_Imp aevalR_extended AMinus constr
R30566:30567 SF_Imp <> a2 var
R30563:30564 SF_Imp <> a1 var
R30576:30578 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R30574:30575 SF_Imp <> n1 var
R30579:30580 SF_Imp <> n2 var
R30544:30547 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30542:30543 SF_Imp <> a2 var
R30548:30549 SF_Imp <> n2 var
R30530:30533 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30528:30529 SF_Imp <> a1 var
R30534:30535 SF_Imp <> n1 var
R30613:30616 SF_Imp aevalR_extended aexp ind
R30628:30630 Coq.Init.Datatypes <> nat ind
R30640:30640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30649:30653 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30654:30654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30663:30667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30668:30668 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30680:30685 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30693:30693 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30669:30673 SF_Imp aevalR_extended AMult constr
R30678:30679 SF_Imp <> a2 var
R30675:30676 SF_Imp <> a1 var
R30688:30690 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R30686:30687 SF_Imp <> n1 var
R30691:30692 SF_Imp <> n2 var
R30657:30660 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30655:30656 SF_Imp <> a2 var
R30661:30662 SF_Imp <> n2 var
R30643:30646 SF_Imp aevalR_extended :type_scope:x_'\\'_x not
R30641:30642 SF_Imp <> a1 var
R30647:30648 SF_Imp <> n1 var
R30717:30722 SF_Imp aevalR_extended aevalR ind
not 30702:30702 aevalR_extended :type_scope:x_'\\'_x
R30748:30762 SF_Imp aevalR_extended <> mod
def 33579:33583 <> state
R33588:33596 SF_Maps <> total_map def
R33598:33600 Coq.Init.Datatypes <> nat ind
ind 33821:33824 <> aexp
constr 33840:33843 <> ANum
constr 33863:33865 <> AId
constr 33920:33924 <> APlus
constr 33953:33958 <> AMinus
constr 33987:33991 <> AMult
R33850:33853 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33854:33857 SF_Imp <> aexp ind
R33847:33849 Coq.Init.Datatypes <> nat ind
R33875:33878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33879:33882 SF_Imp <> aexp ind
R33869:33874 Coq.Strings.String <> string ind
R33932:33935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33940:33943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33944:33947 SF_Imp <> aexp ind
R33936:33939 SF_Imp <> aexp ind
R33928:33931 SF_Imp <> aexp ind
R33966:33969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33974:33977 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33978:33981 SF_Imp <> aexp ind
R33970:33973 SF_Imp <> aexp ind
R33962:33965 SF_Imp <> aexp ind
R33999:34002 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34007:34010 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34011:34014 SF_Imp <> aexp ind
R34003:34006 SF_Imp <> aexp ind
R33995:33998 SF_Imp <> aexp ind
def 34131:34131 <> W
R34135:34140 Coq.Strings.String <> string ind
def 34161:34161 <> X
R34165:34170 Coq.Strings.String <> string ind
def 34191:34191 <> Y
R34195:34200 Coq.Strings.String <> string ind
def 34221:34221 <> Z
R34225:34230 Coq.Strings.String <> string ind
ind 34623:34626 <> bexp
constr 34642:34646 <> BTrue
constr 34659:34664 <> BFalse
constr 34677:34679 <> BEq
constr 34708:34710 <> BLe
constr 34739:34742 <> BNot
constr 34763:34766 <> BAnd
R34650:34653 SF_Imp <> bexp ind
R34668:34671 SF_Imp <> bexp ind
R34687:34690 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34695:34698 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34699:34702 SF_Imp <> bexp ind
R34691:34694 SF_Imp <> aexp ind
R34683:34686 SF_Imp <> aexp ind
R34718:34721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34726:34729 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34730:34733 SF_Imp <> bexp ind
R34722:34725 SF_Imp <> aexp ind
R34714:34717 SF_Imp <> aexp ind
R34750:34753 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34754:34757 SF_Imp <> bexp ind
R34746:34749 SF_Imp <> bexp ind
R34774:34777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34782:34785 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34786:34789 SF_Imp <> bexp ind
R34778:34781 SF_Imp <> bexp ind
R34770:34773 SF_Imp <> bexp ind
R35695:35724 SF_Imp <> AId constr
R35727:35754 SF_Imp <> ANum constr
def 35768:35779 <> bool_to_bexp
R35785:35788 Coq.Init.Datatypes <> bool ind
R35793:35796 SF_Imp <> bexp ind
R35806:35806 SF_Imp <> b var
R35824:35829 SF_Imp <> BFalse constr
R35813:35817 SF_Imp <> BTrue constr
R35832:35868 SF_Imp <> bool_to_bexp def
R35918:35922 SF_Imp <> APlus constr
not 35911:35911 <> :aexp_scope:x_'+'_x
R35951:35956 SF_Imp <> AMinus constr
not 35944:35944 <> :aexp_scope:x_'-'_x
R35985:35989 SF_Imp <> AMult constr
not 35978:35978 <> :aexp_scope:x_'*'_x
R36052:36054 SF_Imp <> BLe constr
not 36044:36044 <> :bexp_scope:x_'<='_x
R36083:36085 SF_Imp <> BEq constr
not 36076:36076 <> :bexp_scope:x_'='_x
R36115:36118 SF_Imp <> BAnd constr
not 36107:36107 <> :bexp_scope:x_'&&'_x
R36155:36158 SF_Imp <> BNot constr
not 36143:36143 <> :bexp_scope:'!'_x
def 36578:36582 <> aeval
R36590:36594 SF_Imp <> state def
R36602:36605 SF_Imp <> aexp ind
R36610:36612 Coq.Init.Datatypes <> nat ind
R36625:36625 SF_Imp <> a var
R36636:36639 SF_Imp <> ANum constr
R36652:36654 SF_Imp <> AId constr
R36661:36662 SF_Imp <> st var
R36718:36722 SF_Imp <> APlus constr
R36733:36733 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36745:36749 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36761:36761 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36734:36738 SF_Imp <> aeval def
R36740:36741 SF_Imp <> st var
R36750:36754 SF_Imp <> aeval def
R36756:36757 SF_Imp <> st var
R36767:36772 SF_Imp <> AMinus constr
R36784:36784 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36796:36800 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36812:36812 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36785:36789 SF_Imp <> aeval def
R36791:36792 SF_Imp <> st var
R36801:36805 SF_Imp <> aeval def
R36807:36808 SF_Imp <> st var
R36818:36822 SF_Imp <> AMult constr
R36833:36833 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36845:36849 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36861:36861 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36834:36838 SF_Imp <> aeval def
R36840:36841 SF_Imp <> st var
R36850:36854 SF_Imp <> aeval def
R36856:36857 SF_Imp <> st var
def 36880:36884 <> beval
R36892:36896 SF_Imp <> state def
R36904:36907 SF_Imp <> bexp ind
R36912:36915 Coq.Init.Datatypes <> bool ind
R36928:36928 SF_Imp <> b var
R36939:36943 SF_Imp <> BTrue constr
R36954:36957 Coq.Init.Datatypes <> true constr
R36963:36968 SF_Imp <> BFalse constr
R36978:36982 Coq.Init.Datatypes <> false constr
R36988:36990 SF_Imp <> BEq constr
R37003:37009 Coq.Arith.EqNat <> beq_nat syndef
R37026:37030 SF_Imp <> aeval def
R37032:37033 SF_Imp <> st var
R37012:37016 SF_Imp <> aeval def
R37018:37019 SF_Imp <> st var
R37043:37045 SF_Imp <> BLe constr
R37058:37060 Coq.Arith.Compare_dec <> leb syndef
R37077:37081 SF_Imp <> aeval def
R37083:37084 SF_Imp <> st var
R37063:37067 SF_Imp <> aeval def
R37069:37070 SF_Imp <> st var
R37094:37097 SF_Imp <> BNot constr
R37109:37112 Coq.Init.Datatypes <> negb def
R37115:37119 SF_Imp <> beval def
R37121:37122 SF_Imp <> st var
R37132:37135 SF_Imp <> BAnd constr
R37147:37150 Coq.Init.Datatypes <> andb def
R37167:37171 SF_Imp <> beval def
R37173:37174 SF_Imp <> st var
R37153:37157 SF_Imp <> beval def
R37159:37160 SF_Imp <> st var
R37344:37351 SF_Maps <> t_update def
R37353:37358 SF_Maps <> ::'{'_'-->'_x_'}' not
R37360:37361 SF_Maps <> ::'{'_'-->'_x_'}' not
not 37323:37323 <> ::'{'_x_'-->'_x_'}'
R37422:37429 SF_Maps <> t_update def
R37432:37433 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R37435:37439 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R37441:37442 SF_Imp <> ::'{'_x_'-->'_x_'}' not
not 37391:37391 <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}'
R37514:37521 SF_Maps <> t_update def
R37524:37525 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37527:37531 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37533:37535 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37537:37541 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37543:37544 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
not 37473:37473 <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}'
R37629:37636 SF_Maps <> t_update def
R37639:37640 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37642:37646 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37648:37650 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37652:37656 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37658:37660 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37662:37666 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37668:37669 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
not 37576:37576 <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}'
R37760:37767 SF_Maps <> t_update def
R37770:37771 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37773:37777 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37779:37781 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37783:37787 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37789:37791 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37793:37797 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37799:37801 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37803:37807 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37809:37810 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
not 37700:37700 <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}'
R37911:37918 SF_Maps <> t_update def
R37921:37922 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37924:37928 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37930:37932 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37934:37938 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37940:37942 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37944:37948 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37950:37952 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37954:37958 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37960:37962 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37964:37968 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R37970:37971 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
not 37841:37841 <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}'
def 38002:38006 <> aexp1
R38043:38047 Coq.Init.Logic <> :type_scope:x_'='_x not
R38012:38016 SF_Imp <> aeval def
R38032:38035 SF_Imp <> :aexp_scope:x_'+'_x not
R38041:38041 SF_Imp <> :aexp_scope:x_'+'_x not
R38037:38039 SF_Imp <> :aexp_scope:x_'*'_x not
R38036:38036 SF_Imp <> X def
R38018:38019 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R38021:38025 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R38027:38028 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R38020:38020 SF_Imp <> X def
def 38086:38090 <> bexp1
R38133:38137 Coq.Init.Logic <> :type_scope:x_'='_x not
R38096:38100 SF_Imp <> beval def
R38119:38122 SF_Imp <> :bexp_scope:x_'&&'_x not
R38115:38118 Coq.Init.Datatypes <> true constr
R38123:38124 SF_Imp <> :bexp_scope:'!'_x not
R38131:38131 SF_Imp <> :bexp_scope:'!'_x not
R38126:38129 SF_Imp <> :bexp_scope:x_'<='_x not
R38125:38125 SF_Imp <> X def
R38102:38103 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R38105:38109 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R38111:38112 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R38104:38104 SF_Imp <> X def
R38138:38141 Coq.Init.Datatypes <> true constr
ind 39226:39228 <> com
constr 39244:39248 <> CSkip
constr 39260:39263 <> CAss
constr 39293:39296 <> CSeq
constr 39322:39324 <> CIf
constr 39358:39363 <> CWhile
R39252:39254 SF_Imp <> com ind
R39273:39276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39281:39284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39285:39287 SF_Imp <> com ind
R39277:39280 SF_Imp <> aexp ind
R39267:39272 Coq.Strings.String <> string ind
R39303:39306 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39310:39313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39314:39316 SF_Imp <> com ind
R39307:39309 SF_Imp <> com ind
R39300:39302 SF_Imp <> com ind
R39332:39335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39339:39342 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39346:39349 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39350:39352 SF_Imp <> com ind
R39343:39345 SF_Imp <> com ind
R39336:39338 SF_Imp <> com ind
R39328:39331 SF_Imp <> bexp ind
R39371:39374 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39378:39381 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39382:39384 SF_Imp <> com ind
R39375:39377 SF_Imp <> com ind
R39367:39370 SF_Imp <> bexp ind
R39575:39579 SF_Imp <> CSkip constr
not 39560:39560 <> :com_scope:'SKIP'
R39621:39624 SF_Imp <> CAss constr
not 39603:39603 <> :com_scope:x_'::='_x
R39684:39687 SF_Imp <> CSeq constr
not 39667:39667 <> :com_scope:x_';;'_x
R39784:39789 SF_Imp <> CWhile constr
not 39753:39753 <> :com_scope:'WHILE'_x_'DO'_x_'END'
R39895:39897 SF_Imp <> CIf constr
not 39853:39853 <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 40192:40202 <> fact_in_coq
R40206:40208 SF_Imp <> com ind
R40222:40226 SF_Imp <> :com_scope:x_';;'_x not
R40216:40220 SF_Imp <> :com_scope:x_'::='_x not
R40215:40215 SF_Imp <> Z def
R40221:40221 SF_Imp <> X def
R40234:40238 SF_Imp <> :com_scope:x_';;'_x not
R40228:40232 SF_Imp <> :com_scope:x_'::='_x not
R40227:40227 SF_Imp <> Y def
R40239:40244 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40254:40261 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40291:40297 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40245:40247 SF_Imp <> :bexp_scope:'!'_x not
R40253:40253 SF_Imp <> :bexp_scope:'!'_x not
R40249:40251 SF_Imp <> :bexp_scope:x_'='_x not
R40248:40248 SF_Imp <> Z def
R40273:40279 SF_Imp <> :com_scope:x_';;'_x not
R40263:40267 SF_Imp <> :com_scope:x_'::='_x not
R40262:40262 SF_Imp <> Y def
R40269:40271 SF_Imp <> :aexp_scope:x_'*'_x not
R40268:40268 SF_Imp <> Y def
R40272:40272 SF_Imp <> Z def
R40281:40285 SF_Imp <> :com_scope:x_'::='_x not
R40280:40280 SF_Imp <> Z def
R40287:40289 SF_Imp <> :aexp_scope:x_'-'_x not
R40286:40286 SF_Imp <> Z def
def 40429:40433 <> plus2
R40437:40439 SF_Imp <> com ind
R40447:40451 SF_Imp <> :com_scope:x_'::='_x not
R40446:40446 SF_Imp <> X def
R40453:40455 SF_Imp <> :aexp_scope:x_'+'_x not
R40452:40452 SF_Imp <> X def
def 40471:40480 <> XtimesYinZ
R40484:40486 SF_Imp <> com ind
R40494:40498 SF_Imp <> :com_scope:x_'::='_x not
R40493:40493 SF_Imp <> Z def
R40500:40502 SF_Imp <> :aexp_scope:x_'*'_x not
R40499:40499 SF_Imp <> X def
R40503:40503 SF_Imp <> Y def
def 40518:40537 <> subtract_slowly_body
R40541:40543 SF_Imp <> com ind
R40561:40566 SF_Imp <> :com_scope:x_';;'_x not
R40551:40555 SF_Imp <> :com_scope:x_'::='_x not
R40550:40550 SF_Imp <> Z def
R40557:40559 SF_Imp <> :aexp_scope:x_'-'_x not
R40556:40556 SF_Imp <> Z def
R40568:40572 SF_Imp <> :com_scope:x_'::='_x not
R40567:40567 SF_Imp <> X def
R40574:40576 SF_Imp <> :aexp_scope:x_'-'_x not
R40573:40573 SF_Imp <> X def
def 40682:40696 <> subtract_slowly
R40700:40702 SF_Imp <> com ind
R40709:40714 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40724:40731 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40752:40757 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40715:40717 SF_Imp <> :bexp_scope:'!'_x not
R40723:40723 SF_Imp <> :bexp_scope:'!'_x not
R40719:40721 SF_Imp <> :bexp_scope:x_'='_x not
R40718:40718 SF_Imp <> X def
R40732:40751 SF_Imp <> subtract_slowly_body def
def 40772:40795 <> subtract_3_from_5_slowly
R40799:40801 SF_Imp <> com ind
R40815:40820 SF_Imp <> :com_scope:x_';;'_x not
R40809:40813 SF_Imp <> :com_scope:x_'::='_x not
R40808:40808 SF_Imp <> X def
R40828:40833 SF_Imp <> :com_scope:x_';;'_x not
R40822:40826 SF_Imp <> :com_scope:x_'::='_x not
R40821:40821 SF_Imp <> Z def
R40834:40848 SF_Imp <> subtract_slowly def
def 40965:40968 <> loop
R40972:40974 SF_Imp <> com ind
R40981:40986 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40991:40998 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R41003:41008 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R40987:40990 Coq.Init.Datatypes <> true constr
R40999:41002 SF_Imp <> :com_scope:'SKIP' not
def 41539:41556 <> ceval_fun_no_while
R41564:41568 SF_Imp <> state def
R41576:41578 SF_Imp <> com ind
R41609:41613 SF_Imp <> state def
R41626:41626 SF_Imp <> c var
R41639:41642 SF_Imp <> :com_scope:'SKIP' not
R41655:41656 SF_Imp <> st var
R41665:41669 SF_Imp <> :com_scope:x_'::='_x not
R41686:41690 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R41692:41697 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R41709:41711 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R41684:41685 SF_Imp <> st var
R41698:41702 SF_Imp <> aeval def
R41704:41705 SF_Imp <> st var
R41721:41724 SF_Imp <> :com_scope:x_';;'_x not
R41750:41767 SF_Imp <> ceval_fun_no_while def
R41769:41770 SF_Imp <> st var
R41786:41803 SF_Imp <> ceval_fun_no_while def
R41805:41807 SF_Imp <> st' var
R41818:41821 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41823:41828 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41831:41836 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41839:41841 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41858:41862 SF_Imp <> beval def
R41864:41865 SF_Imp <> st var
R41925:41942 SF_Imp <> ceval_fun_no_while def
R41944:41945 SF_Imp <> st var
R41885:41902 SF_Imp <> ceval_fun_no_while def
R41904:41905 SF_Imp <> st var
R41956:41961 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R41963:41966 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R41968:41971 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R41984:41985 SF_Imp <> st var
ind 46196:46200 <> ceval
constr 46241:46246 <> E_Skip
constr 46287:46291 <> E_Ass
constr 46385:46389 <> E_Seq
constr 46504:46511 <> E_IfTrue
constr 46638:46646 <> E_IfFalse
constr 46774:46785 <> E_WhileFalse
constr 46872:46882 <> E_WhileTrue
R46207:46210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46216:46219 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46225:46228 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46220:46224 SF_Imp <> state def
R46211:46215 SF_Imp <> state def
R46204:46206 SF_Imp <> com ind
R47074:47078 SF_Imp <> ceval ind
R46271:46273 SF_Imp <> ::x_'/'_x_'\\'_x not
R46276:46279 SF_Imp <> ::x_'/'_x_'\\'_x not
R46267:46270 SF_Imp <> :com_scope:'SKIP' not
R46274:46275 SF_Imp <> st var
R46280:46281 SF_Imp <> st var
R46335:46344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46345:46345 SF_Imp <> ::x_'/'_x_'\\'_x not
R46354:46357 SF_Imp <> ::x_'/'_x_'\\'_x not
R46360:46363 SF_Imp <> ::x_'/'_x_'\\'_x not
R46347:46351 SF_Imp <> :com_scope:x_'::='_x not
R46346:46346 SF_Imp <> x var
R46352:46353 SF_Imp <> a1 var
R46358:46359 SF_Imp <> st var
R46366:46370 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R46372:46376 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R46378:46379 SF_Maps <> ::x_'&'_'{'_x_'-->'_x_'}' not
R46364:46365 SF_Imp <> st var
R46371:46371 SF_Imp <> x var
R46377:46377 SF_Imp <> n var
R46331:46333 Coq.Init.Logic <> :type_scope:x_'='_x not
R46320:46324 SF_Imp <> aeval def
R46329:46330 SF_Imp <> a1 var
R46326:46327 SF_Imp <> st var
R46334:46334 SF_Imp <> n var
R46440:46449 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46466:46475 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46476:46476 SF_Imp <> ::x_'/'_x_'\\'_x not
R46485:46488 SF_Imp <> ::x_'/'_x_'\\'_x not
R46491:46494 SF_Imp <> ::x_'/'_x_'\\'_x not
R46479:46482 SF_Imp <> :com_scope:x_';;'_x not
R46477:46478 SF_Imp <> c1 var
R46483:46484 SF_Imp <> c2 var
R46489:46490 SF_Imp <> st var
R46495:46498 SF_Imp <> st'' var
R46452:46454 SF_Imp <> ::x_'/'_x_'\\'_x not
R46458:46461 SF_Imp <> ::x_'/'_x_'\\'_x not
R46450:46451 SF_Imp <> c2 var
R46455:46457 SF_Imp <> st' var
R46462:46465 SF_Imp <> st'' var
R46427:46429 SF_Imp <> ::x_'/'_x_'\\'_x not
R46432:46436 SF_Imp <> ::x_'/'_x_'\\'_x not
R46425:46426 SF_Imp <> c1 var
R46430:46431 SF_Imp <> st var
R46437:46439 SF_Imp <> st' var
R46561:46570 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46585:46594 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46595:46595 SF_Imp <> ::x_'/'_x_'\\'_x not
R46620:46623 SF_Imp <> ::x_'/'_x_'\\'_x not
R46626:46629 SF_Imp <> ::x_'/'_x_'\\'_x not
R46596:46599 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46601:46606 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46609:46614 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46617:46619 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46600:46600 SF_Imp <> b var
R46607:46608 SF_Imp <> c1 var
R46615:46616 SF_Imp <> c2 var
R46624:46625 SF_Imp <> st var
R46630:46632 SF_Imp <> st' var
R46573:46575 SF_Imp <> ::x_'/'_x_'\\'_x not
R46578:46581 SF_Imp <> ::x_'/'_x_'\\'_x not
R46571:46572 SF_Imp <> c1 var
R46576:46577 SF_Imp <> st var
R46582:46584 SF_Imp <> st' var
R46554:46556 Coq.Init.Logic <> :type_scope:x_'='_x not
R46544:46548 SF_Imp <> beval def
R46553:46553 SF_Imp <> b var
R46550:46551 SF_Imp <> st var
R46557:46560 Coq.Init.Datatypes <> true constr
R46697:46706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46721:46730 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46731:46731 SF_Imp <> ::x_'/'_x_'\\'_x not
R46756:46759 SF_Imp <> ::x_'/'_x_'\\'_x not
R46762:46765 SF_Imp <> ::x_'/'_x_'\\'_x not
R46732:46735 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46737:46742 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46745:46750 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46753:46755 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46736:46736 SF_Imp <> b var
R46743:46744 SF_Imp <> c1 var
R46751:46752 SF_Imp <> c2 var
R46760:46761 SF_Imp <> st var
R46766:46768 SF_Imp <> st' var
R46709:46711 SF_Imp <> ::x_'/'_x_'\\'_x not
R46714:46717 SF_Imp <> ::x_'/'_x_'\\'_x not
R46707:46708 SF_Imp <> c2 var
R46712:46713 SF_Imp <> st var
R46718:46720 SF_Imp <> st' var
R46689:46691 Coq.Init.Logic <> :type_scope:x_'='_x not
R46679:46683 SF_Imp <> beval def
R46688:46688 SF_Imp <> b var
R46685:46686 SF_Imp <> st var
R46692:46696 Coq.Init.Datatypes <> false constr
R46828:46837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46838:46838 SF_Imp <> ::x_'/'_x_'\\'_x not
R46855:46858 SF_Imp <> ::x_'/'_x_'\\'_x not
R46861:46864 SF_Imp <> ::x_'/'_x_'\\'_x not
R46839:46844 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R46846:46849 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R46851:46854 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R46845:46845 SF_Imp <> b var
R46850:46850 SF_Imp <> c var
R46859:46860 SF_Imp <> st var
R46865:46866 SF_Imp <> st var
R46820:46822 Coq.Init.Logic <> :type_scope:x_'='_x not
R46810:46814 SF_Imp <> beval def
R46819:46819 SF_Imp <> b var
R46816:46817 SF_Imp <> st var
R46823:46827 Coq.Init.Datatypes <> false constr
R46933:46942 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46956:46965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46998:47007 Coq.Init.Logic <> :type_scope:x_'->'_x not
R47008:47008 SF_Imp <> ::x_'/'_x_'\\'_x not
R47025:47028 SF_Imp <> ::x_'/'_x_'\\'_x not
R47031:47034 SF_Imp <> ::x_'/'_x_'\\'_x not
R47009:47014 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R47016:47019 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R47021:47024 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R47015:47015 SF_Imp <> b var
R47020:47020 SF_Imp <> c var
R47029:47030 SF_Imp <> st var
R47035:47038 SF_Imp <> st'' var
R46966:46966 SF_Imp <> ::x_'/'_x_'\\'_x not
R46983:46986 SF_Imp <> ::x_'/'_x_'\\'_x not
R46990:46993 SF_Imp <> ::x_'/'_x_'\\'_x not
R46967:46972 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R46974:46977 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R46979:46982 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R46973:46973 SF_Imp <> b var
R46978:46978 SF_Imp <> c var
R46987:46989 SF_Imp <> st' var
R46994:46997 SF_Imp <> st'' var
R46944:46946 SF_Imp <> ::x_'/'_x_'\\'_x not
R46949:46952 SF_Imp <> ::x_'/'_x_'\\'_x not
R46943:46943 SF_Imp <> c var
R46947:46948 SF_Imp <> st var
R46953:46955 SF_Imp <> st' var
R46926:46928 Coq.Init.Logic <> :type_scope:x_'='_x not
R46916:46920 SF_Imp <> beval def
R46925:46925 SF_Imp <> b var
R46922:46923 SF_Imp <> st var
R46929:46932 Coq.Init.Datatypes <> true constr
R47074:47078 SF_Imp <> ceval ind
not 47049:47049 <> ::x_'/'_x_'\\'_x
def 47348:47361 <> ceval_example1
R47368:47368 SF_Imp <> ::x_'/'_x_'\\'_x not
R47442:47448 SF_Imp <> ::x_'/'_x_'\\'_x not
R47458:47461 SF_Imp <> ::x_'/'_x_'\\'_x not
R47376:47383 SF_Imp <> :com_scope:x_';;'_x not
R47370:47374 SF_Imp <> :com_scope:x_'::='_x not
R47369:47369 SF_Imp <> X def
R47384:47387 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47394:47406 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47414:47426 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47434:47441 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R47389:47392 SF_Imp <> :bexp_scope:x_'<='_x not
R47388:47388 SF_Imp <> X def
R47408:47412 SF_Imp <> :com_scope:x_'::='_x not
R47407:47407 SF_Imp <> Y def
R47428:47432 SF_Imp <> :com_scope:x_'::='_x not
R47427:47427 SF_Imp <> Z def
R47449:47454 SF_Maps <> ::'{'_'-->'_x_'}' not
R47456:47457 SF_Maps <> ::'{'_'-->'_x_'}' not
R47462:47463 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47465:47469 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47471:47473 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47475:47479 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47481:47482 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47464:47464 SF_Imp <> X def
R47474:47474 SF_Imp <> Z def
R47557:47558 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R47560:47564 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R47566:47567 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R47559:47559 SF_Imp <> X def
R47546:47550 SF_Imp <> E_Seq constr
R47557:47558 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R47560:47564 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R47566:47567 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R47559:47559 SF_Imp <> X def
R47546:47550 SF_Imp <> E_Seq constr
R47610:47614 SF_Imp <> E_Ass constr
R47610:47614 SF_Imp <> E_Ass constr
R47661:47669 SF_Imp <> E_IfFalse constr
R47661:47669 SF_Imp <> E_IfFalse constr
R47703:47707 SF_Imp <> E_Ass constr
R47703:47707 SF_Imp <> E_Ass constr
def 47786:47799 <> ceval_example2
R47804:47804 SF_Imp <> ::x_'/'_x_'\\'_x not
R47832:47835 SF_Imp <> ::x_'/'_x_'\\'_x not
R47845:47850 SF_Imp <> ::x_'/'_x_'\\'_x not
R47812:47814 SF_Imp <> :com_scope:x_';;'_x not
R47806:47810 SF_Imp <> :com_scope:x_'::='_x not
R47805:47805 SF_Imp <> X def
R47822:47824 SF_Imp <> :com_scope:x_';;'_x not
R47816:47820 SF_Imp <> :com_scope:x_'::='_x not
R47815:47815 SF_Imp <> Y def
R47826:47830 SF_Imp <> :com_scope:x_'::='_x not
R47825:47825 SF_Imp <> Z def
R47836:47841 SF_Maps <> ::'{'_'-->'_x_'}' not
R47843:47844 SF_Maps <> ::'{'_'-->'_x_'}' not
R47851:47852 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47854:47858 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47860:47862 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47864:47868 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47870:47872 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47874:47878 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47880:47881 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R47853:47853 SF_Imp <> X def
R47863:47863 SF_Imp <> Y def
R47873:47873 SF_Imp <> Z def
def 48225:48232 <> pup_to_n
R48236:48238 SF_Imp <> com ind
prf 48316:48329 <> pup_to_2_ceval
R48343:48345 SF_Imp <> ::x_'/'_x_'\\'_x not
R48357:48365 SF_Imp <> ::x_'/'_x_'\\'_x not
R48335:48342 SF_Imp <> pup_to_n prfax
R48346:48347 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R48349:48353 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R48355:48356 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R48348:48348 SF_Imp <> X def
R48366:48367 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48369:48373 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48375:48377 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48379:48383 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48385:48387 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48389:48393 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48395:48397 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48399:48403 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48405:48407 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48409:48413 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48415:48417 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48419:48423 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48425:48426 SF_Imp <> ::'{'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_';'_x_'-->'_x_'}' not
R48368:48368 SF_Imp <> X def
R48378:48378 SF_Imp <> Y def
R48388:48388 SF_Imp <> Y def
R48398:48398 SF_Imp <> X def
R48408:48408 SF_Imp <> Y def
R48418:48418 SF_Imp <> X def
prf 49147:49165 <> ceval_deterministic
R49207:49216 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49230:49238 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49242:49244 Coq.Init.Logic <> :type_scope:x_'='_x not
R49239:49241 SF_Imp <> st1 var
R49245:49247 SF_Imp <> st2 var
R49218:49220 SF_Imp <> ::x_'/'_x_'\\'_x not
R49223:49226 SF_Imp <> ::x_'/'_x_'\\'_x not
R49217:49217 SF_Imp <> c var
R49221:49222 SF_Imp <> st var
R49227:49229 SF_Imp <> st2 var
R49195:49197 SF_Imp <> ::x_'/'_x_'\\'_x not
R49200:49203 SF_Imp <> ::x_'/'_x_'\\'_x not
R49194:49194 SF_Imp <> c var
R49198:49199 SF_Imp <> st var
R49204:49206 SF_Imp <> st1 var
R49467:49469 Coq.Init.Logic <> :type_scope:x_'='_x not
R49467:49469 Coq.Init.Logic <> :type_scope:x_'='_x not
R50238:50240 Coq.Init.Logic <> :type_scope:x_'='_x not
R50238:50240 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 50732:50741 <> plus2_spec
R50772:50777 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50795:50800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R50806:50809 Coq.Init.Logic <> :type_scope:x_'='_x not
R50815:50815 Coq.Init.Logic <> :type_scope:x_'='_x not
R50801:50803 SF_Imp <> st' var
R50805:50805 SF_Imp <> X def
R50811:50813 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R50810:50810 SF_Imp <> n var
R50783:50785 SF_Imp <> ::x_'/'_x_'\\'_x not
R50788:50791 SF_Imp <> ::x_'/'_x_'\\'_x not
R50778:50782 SF_Imp <> plus2 def
R50786:50787 SF_Imp <> st var
R50792:50794 SF_Imp <> st' var
R50768:50770 Coq.Init.Logic <> :type_scope:x_'='_x not
R50764:50765 SF_Imp <> st var
R50767:50767 SF_Imp <> X def
R50771:50771 SF_Imp <> n var
R51140:51150 SF_Maps <> t_update_eq prfax
R51140:51150 SF_Maps <> t_update_eq prfax
prf 51380:51395 <> loop_never_stops
R51416:51417 Coq.Init.Logic <> :type_scope:'~'_x not
R51434:51434 Coq.Init.Logic <> :type_scope:'~'_x not
R51422:51424 SF_Imp <> ::x_'/'_x_'\\'_x not
R51427:51430 SF_Imp <> ::x_'/'_x_'\\'_x not
R51418:51421 SF_Imp <> loop def
R51425:51426 SF_Imp <> st var
R51431:51433 SF_Imp <> st' var
R51475:51478 SF_Imp <> loop def
R51503:51508 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R51513:51516 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R51521:51524 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R51509:51512 Coq.Init.Datatypes <> true constr
R51517:51520 SF_Imp <> :com_scope:'SKIP' not
R51503:51508 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R51513:51516 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R51521:51524 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R51509:51512 Coq.Init.Datatypes <> true constr
R51517:51520 SF_Imp <> :com_scope:'SKIP' not
def 51917:51925 <> no_whiles
R51932:51934 SF_Imp <> com ind
R51939:51942 Coq.Init.Datatypes <> bool ind
R51955:51955 SF_Imp <> c var
R51966:51969 SF_Imp <> :com_scope:'SKIP' not
R51980:51983 Coq.Init.Datatypes <> true constr
R51990:51994 SF_Imp <> :com_scope:x_'::='_x not
R52006:52009 Coq.Init.Datatypes <> true constr
R52017:52020 SF_Imp <> :com_scope:x_';;'_x not
R52033:52036 Coq.Init.Datatypes <> andb def
R52054:52062 SF_Imp <> no_whiles def
R52039:52047 SF_Imp <> no_whiles def
R52072:52075 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52077:52082 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52085:52090 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52093:52095 SF_Imp <> :com_scope:'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R52106:52109 Coq.Init.Datatypes <> andb def
R52127:52135 SF_Imp <> no_whiles def
R52112:52120 SF_Imp <> no_whiles def
R52145:52150 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R52152:52155 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R52157:52160 SF_Imp <> :com_scope:'WHILE'_x_'DO'_x_'END' not
R52172:52176 Coq.Init.Datatypes <> false constr
ind 52472:52481 <> no_whilesR
R52487:52490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52484:52486 SF_Imp <> com ind
prf 52530:52542 <> no_whiles_eqv
R52576:52580 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R52569:52571 Coq.Init.Logic <> :type_scope:x_'='_x not
R52558:52566 SF_Imp <> no_whiles def
R52568:52568 SF_Imp <> c var
R52572:52575 Coq.Init.Datatypes <> true constr
R52581:52590 SF_Imp <> no_whilesR ind
R52592:52592 SF_Imp <> c var
ind 54417:54422 <> sinstr
constr 54436:54440 <> SPush
constr 54460:54464 <> SLoad
constr 54487:54491 <> SPlus
constr 54504:54509 <> SMinus
constr 54522:54526 <> SMult
R54447:54450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54451:54456 SF_Imp <> sinstr ind
R54444:54446 Coq.Init.Datatypes <> nat ind
R54474:54477 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54478:54483 SF_Imp <> sinstr ind
R54468:54473 Coq.Strings.String <> string ind
R54495:54500 SF_Imp <> sinstr ind
R54513:54518 SF_Imp <> sinstr ind
R54530:54535 SF_Imp <> sinstr ind
def 55200:55208 <> s_execute
R55216:55220 SF_Imp <> state def
R55232:55235 Coq.Init.Datatypes <> list ind
R55237:55239 Coq.Init.Datatypes <> nat ind
R55269:55272 Coq.Init.Datatypes <> list ind
R55274:55279 SF_Imp <> sinstr ind
R55301:55304 Coq.Init.Datatypes <> list ind
R55306:55308 Coq.Init.Datatypes <> nat ind
def 55386:55395 <> s_execute1
R55469:55474 Coq.Init.Logic <> :type_scope:x_'='_x not
R55404:55412 SF_Imp <> s_execute prfax
R55434:55434 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55442:55443 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55451:55452 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55460:55461 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55468:55468 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55435:55439 SF_Imp <> SPush constr
R55444:55448 SF_Imp <> SPush constr
R55453:55457 SF_Imp <> SPush constr
R55462:55467 SF_Imp <> SMinus constr
R55424:55425 Coq.Lists.List ListNotations :list_scope:'['_']' not
R55414:55419 SF_Maps <> ::'{'_'-->'_x_'}' not
R55421:55422 SF_Maps <> ::'{'_'-->'_x_'}' not
R55475:55475 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55477:55478 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55480:55480 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 55557:55566 <> s_execute2
R55642:55647 Coq.Init.Logic <> :type_scope:x_'='_x not
R55575:55583 SF_Imp <> s_execute prfax
R55610:55610 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55618:55619 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55627:55628 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55634:55635 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55641:55641 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55611:55615 SF_Imp <> SPush constr
R55620:55624 SF_Imp <> SLoad constr
R55626:55626 SF_Imp <> X def
R55629:55633 SF_Imp <> SMult constr
R55636:55640 SF_Imp <> SPlus constr
R55597:55597 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55599:55599 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55601:55601 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55585:55586 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R55588:55592 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R55594:55595 SF_Imp <> ::'{'_x_'-->'_x_'}' not
R55587:55587 SF_Imp <> X def
R55648:55648 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55651:55652 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R55654:55654 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 55931:55939 <> s_compile
R55946:55949 SF_Imp <> aexp ind
R55954:55957 Coq.Init.Datatypes <> list ind
R55959:55964 SF_Imp <> sinstr ind
def 56131:56140 <> s_compile1
R56169:56173 Coq.Init.Logic <> :type_scope:x_'='_x not
R56146:56154 SF_Imp <> s_compile prfax
R56158:56161 SF_Imp <> :aexp_scope:x_'-'_x not
R56167:56167 SF_Imp <> :aexp_scope:x_'-'_x not
R56157:56157 SF_Imp <> X def
R56163:56165 SF_Imp <> :aexp_scope:x_'*'_x not
R56166:56166 SF_Imp <> Y def
R56174:56174 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R56182:56183 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R56191:56192 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R56200:56201 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R56207:56208 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R56215:56215 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R56175:56179 SF_Imp <> SLoad constr
R56181:56181 SF_Imp <> X def
R56184:56188 SF_Imp <> SPush constr
R56193:56197 SF_Imp <> SLoad constr
R56199:56199 SF_Imp <> Y def
R56202:56206 SF_Imp <> SMult constr
R56209:56214 SF_Imp <> SMinus constr
prf 56935:56951 <> s_compile_correct
R56968:56972 SF_Imp <> state def
R56980:56983 SF_Imp <> aexp ind
R57018:57020 Coq.Init.Logic <> :type_scope:x_'='_x not
R56989:56997 SF_Imp <> s_execute prfax
R57006:57014 SF_Imp <> s_compile prfax
R57016:57016 SF_Imp <> e var
R57002:57003 Coq.Lists.List ListNotations :list_scope:'['_']' not
R56999:57000 SF_Imp <> st var
R57021:57022 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R57033:57034 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R57023:57027 SF_Imp <> aeval def
R57032:57032 SF_Imp <> e var
R57029:57030 SF_Imp <> st var
mod 57708:57715 <> BreakImp
ind 58056:58058 BreakImp com
constr 58074:58078 BreakImp CSkip
constr 58090:58095 BreakImp CBreak
constr 58135:58138 BreakImp CAss
constr 58168:58171 BreakImp CSeq
constr 58197:58199 BreakImp CIf
constr 58233:58238 BreakImp CWhile
R58082:58084 SF_Imp <> com ind
R58099:58101 SF_Imp <> com ind
R58148:58151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58156:58159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58160:58162 SF_Imp <> com ind
R58152:58155 SF_Imp <> aexp ind
R58142:58147 Coq.Strings.String <> string ind
R58178:58181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58185:58188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58189:58191 SF_Imp <> com ind
R58182:58184 SF_Imp <> com ind
R58175:58177 SF_Imp <> com ind
R58207:58210 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58214:58217 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58221:58224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58225:58227 SF_Imp <> com ind
R58218:58220 SF_Imp <> com ind
R58211:58213 SF_Imp <> com ind
R58203:58206 SF_Imp <> bexp ind
R58246:58249 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58253:58256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R58257:58259 SF_Imp <> com ind
R58250:58252 SF_Imp <> com ind
R58242:58245 SF_Imp <> bexp ind
R58286:58290 SF_Imp BreakImp CSkip constr
not 58272:58272 BreakImp ::'SKIP'
R58317:58322 SF_Imp BreakImp CBreak constr
not 58302:58302 BreakImp ::'BREAK'
R58352:58355 SF_Imp BreakImp CAss constr
not 58334:58334 BreakImp ::x_'::='_x
R58403:58406 SF_Imp BreakImp CSeq constr
not 58386:58386 BreakImp ::x_';;'_x
R58491:58496 SF_Imp BreakImp CWhile constr
not 58460:58460 BreakImp ::'WHILE'_x_'DO'_x_'END'
R58590:58592 SF_Imp BreakImp CIf constr
not 58548:58548 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 59693:59698 BreakImp result
constr 59714:59722 BreakImp SContinue
constr 59737:59742 BreakImp SBreak
R59726:59731 SF_Imp <> result ind
R59746:59751 SF_Imp <> result ind
ind 62140:62144 BreakImp ceval
constr 62195:62200 BreakImp E_Skip
R62151:62154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62160:62163 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62170:62173 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62179:62182 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62174:62178 SF_Imp <> state def
R62164:62169 SF_Imp BreakImp result ind
R62155:62159 SF_Imp <> state def
R62148:62150 SF_Imp BreakImp com ind
R62311:62315 SF_Imp <> ceval ind
R62226:62228 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62231:62234 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62244:62246 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62221:62225 SF_Imp BreakImp CSkip constr
R62229:62230 SF_Imp <> st var
R62235:62243 SF_Imp BreakImp SContinue constr
R62247:62248 SF_Imp <> st var
R62311:62315 SF_Imp BreakImp ceval ind
not 62280:62280 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 62414:62425 BreakImp break_ignore
R62480:62488 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62491:62493 Coq.Init.Logic <> :type_scope:x_'='_x not
R62489:62490 SF_Imp <> st var
R62494:62496 SF_Imp <> st' var
R62453:62453 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62463:62466 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62469:62472 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62474:62476 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62459:62461 SF_Imp BreakImp ::x_';;'_x not
R62454:62458 SF_Imp BreakImp ::'BREAK' not
R62462:62462 SF_Imp <> c var
R62467:62468 SF_Imp <> st var
R62473:62473 SF_Imp <> s var
R62477:62479 SF_Imp <> st' var
prf 62546:62559 BreakImp while_continue
R62620:62625 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62627:62629 Coq.Init.Logic <> :type_scope:x_'='_x not
R62626:62626 SF_Imp <> s var
R62630:62638 SF_Imp BreakImp SContinue constr
R62586:62586 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62603:62606 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62609:62612 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62614:62616 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62587:62592 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R62594:62597 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R62599:62602 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R62593:62593 SF_Imp <> b var
R62598:62598 SF_Imp <> c var
R62607:62608 SF_Imp <> st var
R62613:62613 SF_Imp <> s var
R62617:62619 SF_Imp <> st' var
prf 62688:62707 BreakImp while_stops_on_break
R62749:62754 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62777:62782 Coq.Init.Logic <> :type_scope:x_'->'_x not
R62783:62783 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62800:62803 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62806:62809 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62819:62821 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62784:62789 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R62791:62794 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R62796:62799 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R62790:62790 SF_Imp <> b var
R62795:62795 SF_Imp <> c var
R62804:62805 SF_Imp <> st var
R62810:62818 SF_Imp BreakImp SContinue constr
R62822:62824 SF_Imp <> st' var
R62756:62758 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62761:62764 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62771:62773 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62755:62755 SF_Imp <> c var
R62759:62760 SF_Imp <> st var
R62765:62770 SF_Imp BreakImp SBreak constr
R62774:62776 SF_Imp <> st' var
R62742:62744 Coq.Init.Logic <> :type_scope:x_'='_x not
R62732:62736 SF_Imp <> beval def
R62741:62741 SF_Imp <> b var
R62738:62739 SF_Imp <> st var
R62745:62748 Coq.Init.Datatypes <> true constr
prf 62954:62969 BreakImp while_break_true
R63036:63041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63060:63065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63066:63072 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63077:63078 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R63080:63082 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63087:63090 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63097:63099 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63079:63079 SF_Imp <> c var
R63083:63086 SF_Imp <> st'' var
R63091:63096 SF_Imp BreakImp SBreak constr
R63100:63102 SF_Imp <> st' var
R63053:63055 Coq.Init.Logic <> :type_scope:x_'='_x not
R63042:63046 SF_Imp <> beval def
R63052:63052 SF_Imp <> b var
R63048:63050 SF_Imp <> st' var
R63056:63059 Coq.Init.Datatypes <> true constr
R62994:62994 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63011:63014 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63017:63020 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63030:63032 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R62995:63000 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R63002:63005 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R63007:63010 SF_Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R63001:63001 SF_Imp <> b var
R63006:63006 SF_Imp <> c var
R63015:63016 SF_Imp <> st var
R63021:63029 SF_Imp BreakImp SContinue constr
R63033:63035 SF_Imp <> st' var
prf 63233:63251 BreakImp ceval_deterministic
R63264:63266 SF_Imp BreakImp com ind
R63310:63319 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63338:63346 Coq.Init.Logic <> :type_scope:x_'->'_x not
R63356:63359 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R63350:63352 Coq.Init.Logic <> :type_scope:x_'='_x not
R63347:63349 SF_Imp <> st1 var
R63353:63355 SF_Imp <> st2 var
R63362:63364 Coq.Init.Logic <> :type_scope:x_'='_x not
R63360:63361 SF_Imp <> s1 var
R63365:63366 SF_Imp <> s2 var
R63321:63323 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63326:63329 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63332:63334 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63320:63320 SF_Imp <> c var
R63324:63325 SF_Imp <> st var
R63330:63331 SF_Imp <> s2 var
R63335:63337 SF_Imp <> st2 var
R63293:63295 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63298:63301 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63304:63306 SF_Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R63292:63292 SF_Imp <> c var
R63296:63297 SF_Imp <> st var
R63302:63303 SF_Imp <> s1 var
R63307:63309 SF_Imp <> st1 var
R63422:63429 SF_Imp BreakImp <> mod
